-- Converted using Mokiros's Model to Script Version 3
-- Converted string size: 20532 characters

local ScriptFunctions = {
function(script,require)
local cs = game:GetService("CollectionService")

local us = game.Players.LocalPlayer
local fw = game.ReplicatedStorage.WeaponFrameworkRep


local baseBulletBin = Instance.new("Part")

local leadingAttach = Instance.new("Attachment")
leadingAttach.Name = "LeadingAttachment"
leadingAttach.Parent = baseBulletBin

local sideAttach = Instance.new("Attachment")
sideAttach.Name = "SideAttachment"
sideAttach.Parent = baseBulletBin

local link = Instance.new("ObjectValue")
link.Name = "SideAttachmentPortal"
link.Value = sideAttach
link.Parent = leadingAttach

local owner = Instance.new("ObjectValue")
owner.Name = "BulletOwner"
owner.Value = us
owner.Parent = leadingAttach

local bulletType = Instance.new("StringValue")
bulletType.Name = "BulletType"
bulletType.Parent = leadingAttach

local velocity = Instance.new("Vector3Value")
velocity.Name = "Velocity"
velocity.Parent = leadingAttach

local timer = Instance.new("NumberValue")
timer.Name = "DespawnTimer"
timer.Parent = leadingAttach

local tracer = fw.Shoot.Tracer:Clone()
tracer.Attachment0 = leadingAttach
tracer.Attachment1 = sideAttach
tracer.Parent = leadingAttach


local fabBullet = function(bulletType, ignore, bulletOwner)
	local ammo = fw.AmmoTypes[bulletType]
	
	local newBin = baseBulletBin:Clone()
	newBin.LeadingAttachment.Tracer.Attachment0 = newBin.LeadingAttachment
	newBin.LeadingAttachment.Tracer.Attachment1 = newBin.SideAttachment
	newBin.LeadingAttachment.Tracer.Color = ColorSequence.new(ammo.Color.Value)
	newBin.LeadingAttachment.Tracer.WidthScale = NumberSequence.new(ammo.Width.Value, 0)
	newBin.LeadingAttachment.Tracer.Transparency = NumberSequence.new(ammo.Transparency.Value, 1)
	
	newBin.LeadingAttachment.BulletOwner.Value = bulletOwner
	newBin.LeadingAttachment.BulletType.Value = bulletType
	newBin.LeadingAttachment.DespawnTimer.Value = ammo.DespawnTime.Value
	
	for _,v in pairs(ignore) do
		local new = Instance.new("ObjectValue")
		new.Value = v
		new.Name = "ToIgnore"
		new.Parent = newBin.LeadingAttachment
	end
	
	return newBin
end

local shoot = function(cf, muzzleVelocity, additionalVelocity, bulletType, ignoreTable, fxTable, bulletOwner)
	if bulletOwner == nil then
		bulletOwner = us
	end
	
	for _,pair in pairs(fxTable) do
		pair[1]:Emit(pair[2])
	end
	
	local bin = fabBullet(bulletType, ignoreTable, bulletOwner)
	bin.LeadingAttachment.CFrame = cf * CFrame.new(0,0,.5)
	bin.SideAttachment.CFrame = bin.LeadingAttachment.CFrame * CFrame.new(0,0,-1)
	
	bin.LeadingAttachment.Velocity.Value = cf.LookVector * muzzleVelocity + additionalVelocity
	
	local leading = bin.LeadingAttachment
	
	bin.LeadingAttachment.Parent = workspace.Terrain
	bin.SideAttachment.Parent = workspace.Terrain
	bin:Destroy() -- unpack everything
	
	if bulletOwner == us then
		fw.Events.ReplicateShot:FireServer(19742, cf, muzzleVelocity, additionalVelocity, bulletType, ignoreTable, fxTable)
	end
	
	cs:AddTag(leading, "LeadingBulletAttachment")
	
	-- the bullet physics script takes it from here
end

return shoot

end,
function(script,require)
local cs = game:GetService("CollectionService")

local module = function(v, on, dnr)
	if on then
		cs:AddTag(v, "RepeatingSound")
		if v.Playing == false or v.TimePosition > v.FinishTime.Value then
			v.TimePosition = v.StartTime.Value
		end
		
		v.Playing = true
	else
		cs:RemoveTag(v, "RepeatingSound")
		v.TimePosition = v.FinishTime.Value
		
		if v:FindFirstChild("EndSound") then
			v.EndSound.Value:Play()
		end
	end
	
	if dnr == nil then
		game.ReplicatedStorage.WeaponFrameworkRep.Events.MarkLoopingSound:FireServer(v, on)
	end
end

return module
end,
function(script,require)
local cs = game:GetService("CollectionService")

local fw = game.ReplicatedStorage.WeaponFrameworkRep

local fabRocket = function(typeName, cf, mV, iV, ignoreTable, owner)
	local value = script.Parent.RocketTypes[typeName]
	local model = value.Value:Clone()
	
	local main = model.PrimaryPart
	
	if owner ~= nil then
		local fakeMarker = Instance.new("Folder")
		fakeMarker.Name = "ReplicatedRocket"
		fakeMarker.Parent = main
	end
	
	local typeMarker = Instance.new("ObjectValue")
	typeMarker.Name = "RocketType"
	typeMarker.Value = value
	typeMarker.Parent = main
	
	local gravityMarker = Instance.new("NumberValue")
	gravityMarker.Name = "VerticalAcceleration"
	gravityMarker.Value = value.VerticalAcceleration.Value
	gravityMarker.Parent = main
	
	local burnMarker = Instance.new("NumberValue")
	burnMarker.Name = "BurnTime"
	burnMarker.Value = value.BurnTime.Value
	burnMarker.Parent = main
	
	local thrustMarker = Instance.new("NumberValue")
	thrustMarker.Name = "BurnAcceleration"
	thrustMarker.Value = value.BurnSPS.Value
	thrustMarker.Parent = main
	
	local despawnMarker = Instance.new("NumberValue")
	despawnMarker.Name = "DespawnTime"
	despawnMarker.Value = value.DespawnTime.Value
	despawnMarker.Parent = main
	
	local gravityCountdown = Instance.new("NumberValue")
	gravityCountdown.Name = "GravityCountdown"
	gravityCountdown.Value = value.GravityCountdown.Value
	gravityCountdown.Parent = main
	
	local turnCountdown = Instance.new("NumberValue")
	turnCountdown.Name = "TurnCountdown"
	turnCountdown.Value = value.TurnCountdown.Value
	turnCountdown.Parent = main
	
	local currentVelocity = Instance.new("Vector3Value")
	currentVelocity.Name = "RocketVelocity"
	currentVelocity.Value = cf.lookVector * mV + iV
	currentVelocity.Parent = main
	
	local retentionMarker = Instance.new("NumberValue")
	retentionMarker.Name = "VelocityRetention"
	retentionMarker.Value = value.VelocityRetentionPercent.Value
	retentionMarker.Parent = main
	
	if value:FindFirstChild("BurnSFX") ~= nil then
		local new = value.BurnSFX:Clone()
		new.Looped = true
		new.Parent = main
	end
	
	if value:FindFirstChild("ExplodeSFX") ~= nil then
		local new = value.ExplodeSFX:Clone()
		new.Parent = main
	end
	
	local ignoreBin = Instance.new("Folder")
	ignoreBin.Name = "IgnoreTable"
	
	for _,v in pairs(ignoreTable) do
		local new = Instance.new("ObjectValue")
		new.Name = "ToIgnore"
		new.Value = v
		new.Parent = ignoreBin
	end
	
	ignoreBin.Parent = main
	
	model:SetPrimaryPartCFrame(cf)
	
	return model
end

local shoot = function(cf, mV, iV, rocketType, ignoreTable, fxTable, invisTable, soundTable, bulletOwner)
	local model = fabRocket(rocketType, cf, mV, iV, ignoreTable, bulletOwner)
	model.Parent = workspace.CurrentCamera
	
	cs:AddTag(model, "RocketModel")
	
	for _,pair in pairs(fxTable) do
		pair[1]:Emit(pair[2])
	end
	
	for _,v in pairs(invisTable) do
		if v:IsA("BasePart") then
			v.Transparency = 1
		end
	end
	
	for _,v in pairs(soundTable) do
		v:Play()
	end
	
	if bulletOwner == nil then
		fw.Events.ReplicateRocket:FireServer(19742, cf, mV, iV, rocketType, ignoreTable, fxTable, invisTable, soundTable)
	end
end

return shoot

end,
function(script,require)
local module = {}

local cs = game:GetService("CollectionService")

local sensor = Instance.new("Camera")
sensor.FieldOfView = 75
sensor.Name = "Sensor"
sensor.Parent = script


local speedLoss = .02
local t = 0

local willDetonate = false

local velocity

local targetDot
local targetPos

local model
local main

local ignoreTable = {}


local getAcceleration = function()
	if t < .5 then
		return 500
	elseif t < 2 then
		return 100
	else
		return 0
	end
end

local getMaxTurn = function()
	return math.max(0, math.sqrt(velocity.Magnitude))
end

local getDragFactor = function()
	return math.min(t * 6, 12)
end

local isVisible = function(cf, lookingAt, ignore)
	local pos, inView = sensor:WorldToViewportPoint(lookingAt)
		
	sensor.CFrame = cf
	local straightAt = CFrame.new(cf.Position, lookingAt)
	local pos = lookingAt + straightAt.lookVector * -.5
	
	local parts = sensor:GetPartsObscuringTarget({pos}, {model, ignore})
	
	return #parts == 0 and inView
end

local scanIR = function(cf)
	sensor.CFrame = cf
	
	local possibleTargets = {}
	
	for _,v in pairs(cs:GetTagged("InfraredDot")) do
		
		local pos, inView = sensor:WorldToViewportPoint(v.Position)
		
		if inView then
			table.insert(possibleTargets, v)
		end
	end
	
	local bestScore = 0
	local target
	
	for _,v in pairs(possibleTargets) do
		local offset = CFrame.new(sensor.CFrame.Position, v.Position).lookVector * -.5
		local obstructions = sensor:GetPartsObscuringTarget({v.Position + offset}, {model, v})
		
		if #obstructions == 0 then
			local a = sensor.CFrame.LookVector
			local b = CFrame.new(sensor.CFrame.Position, v.Position).lookVector
			local angle = math.acos(a:Dot(b)/(a.Magnitude * b.Magnitude))
			
			local score = 75 - angle
			
			if score > bestScore then
				bestScore = score
				target = v
			end
		end
	end
	
	return target
end


local filterNAN = function(v)
	if v ~= v then
		return 0
	else
		return v
	end
end

local computeGuidance = function(delta)
	local dist = (main.Position - targetPos).Magnitude
	
	local aimAt = targetPos + Vector3.new(0, math.max(dist / 2 - 200, 0), 0)
	
	local targetVector = CFrame.new(main.Position, aimAt).lookVector.Unit
	
	local targElev = 0;
	local targRot = 0;
	
	local mainCF = model.AugmentedCF.CFrame;
	local cf = main.CFrame
	
	-- Vector normal to the plane which would be the turret ring
	local turretNormal = mainCF.lookVector;
	
	local angleFromNormal = turretNormal:Dot(targetVector);
	
	-- Determine gun elevation
	targElev = math.pi/2 - math.acos(angleFromNormal);
	targRot= math.pi/2 - math.acos(angleFromNormal);	

	-- Projection of target vector onto the turret plane
	local targetProjection = (targetVector - (angleFromNormal*turretNormal)).unit;	

	local forwardVector = ( (mainCF - main.Position) -- Orientation only of brick
		* CFrame.new(0, -1, 0)).p; -- Translated down 1
	
	-- Determine angle between forward vector and the projected target vector
	targRot = math.acos(forwardVector:Dot(targetProjection));
	
	-- Determine the sign of the angle
	local vectorCross = forwardVector:Cross(targetProjection);
	
	-- If the cross product is opposite to the normal vector, make the angle negative
	if (vectorCross:Dot(turretNormal) < 0) then
		targRot = -targRot;
	end
	
	local vertical = -math.deg(filterNAN(targElev))
	local horizontal = -math.deg(filterNAN(targRot))
	
	local xVel = main.CFrame:vectorToWorldSpace(Vector3.new(1,0,0)):Dot(velocity)
	local yVel = main.CFrame:vectorToWorldSpace(Vector3.new(0,1,0)):Dot(velocity)
	
	local xForce = main.CFrame.RightVector * -xVel * delta * getDragFactor()
	local yForce = main.CFrame.UpVector * -yVel * delta * getDragFactor()
	
	velocity = velocity + (main.CFrame.LookVector * getAcceleration() * delta) + xForce + yForce
	
	local lossMultiplier = 1 - (speedLoss * delta)
	velocity = velocity * lossMultiplier
	
	local tm = getMaxTurn()
	local verticalTurn = math.clamp(vertical * 3, -tm, tm) * delta
	local horizontalTurn = math.clamp(horizontal * 3, -tm, tm) * delta
	
	local turnLoss = math.abs(verticalTurn) + math.abs(horizontalTurn) / 4
	
	local gravityLoss = velocity.Unit * velocity.Y / -3 * delta
	
	velocity = velocity * (1 - turnLoss / 100) + gravityLoss
	
	cf = (cf + (velocity * delta)) * CFrame.Angles(math.rad(verticalTurn), math.rad(-horizontalTurn), 0)
	
	model:SetPrimaryPartCFrame(cf * CFrame.Angles(0,0,0))
	
	if getAcceleration() > 0 then
		model.Emitter.FX.Fire:Emit(3)
		model.Emitter.FX.Smoke:Emit(2)
		
		model.Main.BurnSFX.Playing = true
	else
		model.Main.BurnSFX.Playing = false
	end
	
	t = t + delta
	
	willDetonate = (t > 2 and velocity.Magnitude < 150)
	
	return willDetonate
end

local checkCollision = function(delta)
	local ray = Ray.new(main.CFrame.Position, velocity * delta)
	
	local hit, pos = workspace:FindPartOnRayWithIgnoreList(ray, ignoreTable)
	
	return hit ~= nil
end

module.Init = function(providedMain)
	main = providedMain
	model = main.Parent
	
	targetDot = main.PartValue.Value
	targetPos = targetDot.Position
	
	velocity = main.StartingVelocity.Value
	
	local ignoreStuff = main.IgnoreTable
	
	table.insert(ignoreTable, model)
	
	for _,v in pairs(ignoreStuff:GetChildren()) do
		table.insert(ignoreTable, v.Value)
	end
end

module.RunFrame = function(delta)
	local willCollide = false
	
	if t > .2 then
		if targetDot ~= nil and targetDot.Parent ~= nil then
			if not isVisible(main.CFrame, targetDot.Position, targetDot) then
				targetDot = nil
			end
		else
			targetDot = nil
		end
		
		willCollide = checkCollision(delta)
	end
	
	if targetDot == nil then
		targetDot = scanIR(main.CFrame)
	end
	
	if targetDot ~= nil and targetDot.Parent ~= nil then
		targetPos = targetDot.Position
	elseif not isVisible(main.CFrame, targetPos, nil) then
		willDetonate = true
	end

	willDetonate = computeGuidance(delta)
	
	return (willDetonate or willCollide)
end

return module
end,
function(script,require)
local module = {}

local cs = game:GetService("CollectionService")

local sensor = Instance.new("Camera")
sensor.FieldOfView = 75
sensor.Name = "Sensor"
sensor.Parent = script


local speedLoss = .02
local t = 0

local willDetonate = false
local lastDist = math.huge

local velocity

local target
local targetPos

local model
local main

local ignoreTable = {}

local rescanTimer = .3


local getAcceleration = function()
	if t < 1 then
		return 400
	elseif t < 4 then
		return 200
	else
		return 0
	end
end

local getMaxTurn = function()
	return math.max(0, (1 / ((t + 1) / 30)) * 1.2)
end

local getDragFactor = function()
	return math.min(t * 6, 12)
end

local isVisible = function(cf, lookingAt, ignore)
	local pos, inView = sensor:WorldToViewportPoint(lookingAt)
		
	sensor.CFrame = cf
	local straightAt = CFrame.new(cf.Position, lookingAt)
	local pos = lookingAt + straightAt.lookVector * -.5
	
	local parts = sensor:GetPartsObscuringTarget({pos}, {model, ignore})
	
	return #parts == 0 and inView
end

local scanHeatSources = function(cf)
	sensor.CFrame = cf
	
	local possibleTargets = {}
	
	for _,v in pairs(cs:GetTagged("InfraredSource")) do
		local pos, inView = sensor:WorldToViewportPoint(v.Position)
		
		if inView then
			table.insert(possibleTargets, v)
		end
	end
	
	for _,v in pairs(cs:GetTagged("FlareAttachment")) do
		local pos, inView = sensor:WorldToViewportPoint(v.WorldPosition)
		
		if inView then
			table.insert(possibleTargets, v)
		end
	end
	
	local bestScore = 0
	local target
	
	local partsIgnore = cs:GetTagged("BlizzardHeliPart")
	table.insert(partsIgnore, model)
	
	for _,v in pairs(possibleTargets) do
		local a = sensor.CFrame.LookVector
		local b = CFrame.new(sensor.CFrame.Position, v.Position).lookVector
		local angle = math.acos(a:Dot(b)/(a.Magnitude * b.Magnitude))
		
		local angleScore = 70 - angle
		
		local score = angleScore + v.HeatStrength.Value
		
		local range = (v.Position - sensor.CFrame.Position).Magnitude
		local rangeScore = v.HeatStrength.Value * 30
		
		if angleScore > 0 and score > bestScore and rangeScore > range then
			local offset = CFrame.new(sensor.CFrame.Position, v.Position).lookVector * -.5
			table.insert(partsIgnore, v)
			local obstructions = sensor:GetPartsObscuringTarget({v.Position + offset}, partsIgnore)
			
			if #obstructions == 0 then
				bestScore = score
				target = v
			end
		end
	end
	
	return target
end


local filterNAN = function(v)
	if v ~= v then
		return 0
	else
		return v
	end
end

local computeGuidance = function(delta)
	local dist = (main.Position - targetPos).Magnitude
	
	local targetVector
	
	if target == nil then
		local aimAt = targetPos
		
		targetVector = CFrame.new(main.Position, aimAt).lookVector.Unit
	else
		local targetVelocity
		
		if target:IsA("Attachment") then
			targetVelocity = target.Velocity.Value
		else
			targetVelocity = target.Velocity
		end
		
		local combined = targetVelocity - velocity
		
		local timeToImpact = (targetPos - main.Position).Magnitude / combined.Magnitude
		
		local aimAt = targetPos + (targetVelocity * timeToImpact)
		
		targetVector = CFrame.new(main.Position, aimAt).lookVector.Unit
	end
	
	local targElev = 0;
	local targRot = 0;
	
	local mainCF = model.AugmentedCF.CFrame;
	local cf = main.CFrame
	
	-- Vector normal to the plane which would be the turret ring
	local turretNormal = mainCF.lookVector;
	
	local angleFromNormal = turretNormal:Dot(targetVector);
	
	-- Determine gun elevation
	targElev = math.pi/2 - math.acos(angleFromNormal);
	targRot= math.pi/2 - math.acos(angleFromNormal);	

	-- Projection of target vector onto the turret plane
	local targetProjection = (targetVector - (angleFromNormal*turretNormal)).unit;	

	local forwardVector = ( (mainCF - main.Position) -- Orientation only of brick
		* CFrame.new(0, -1, 0)).p; -- Translated down 1
	
	-- Determine angle between forward vector and the projected target vector
	targRot = math.acos(forwardVector:Dot(targetProjection));
	
	-- Determine the sign of the angle
	local vectorCross = forwardVector:Cross(targetProjection);
	
	-- If the cross product is opposite to the normal vector, make the angle negative
	if (vectorCross:Dot(turretNormal) < 0) then
		targRot = -targRot;
	end
	
	local vertical = -math.deg(filterNAN(targElev))
	local horizontal = -math.deg(filterNAN(targRot))
	
	local xVel = main.CFrame:vectorToWorldSpace(Vector3.new(1,0,0)):Dot(velocity)
	local yVel = main.CFrame:vectorToWorldSpace(Vector3.new(0,1,0)):Dot(velocity)
	
	local xForce = main.CFrame.RightVector * -xVel * delta * getDragFactor()
	local yForce = main.CFrame.UpVector * -yVel * delta * getDragFactor()
	
	velocity = velocity + (main.CFrame.LookVector * getAcceleration() * delta) + xForce + yForce
	
	local lossMultiplier = 1 - (speedLoss * delta)
	velocity = velocity * lossMultiplier
	
	local tm = getMaxTurn()
	local verticalTurn = math.clamp(vertical * 3, -tm, tm) * delta
	local horizontalTurn = math.clamp(horizontal * 3, -tm, tm) * delta
	
	local turnLoss = math.abs(verticalTurn) + math.abs(horizontalTurn) / 4
	
	local gravityLoss = velocity.Unit * velocity.Y / -3 * delta
	
	velocity = velocity * (1 - turnLoss / 100) + gravityLoss
	
	cf = (cf + (velocity * delta)) * CFrame.Angles(math.rad(verticalTurn), math.rad(-horizontalTurn), 0)
	
	model:SetPrimaryPartCFrame(cf * CFrame.Angles(0,0,0))
	
	if getAcceleration() > 0 then
		model.Emitter.FX.Fire:Emit(3)
		model.Emitter.FX.Smoke:Emit(2)
		
		model.Main.BurnSFX.Playing = true
	else
		model.Main.BurnSFX.Playing = false
	end
	
	t = t + delta
	
	
	willDetonate = ((t > 2 and velocity.Magnitude < 150) or (dist < 5))
	
	if t > 1 and dist > lastDist then
		willDetonate = true
	end
	
	lastDist = dist
	
	return willDetonate
end

local checkCollision = function(delta)
	local ray = Ray.new(main.CFrame.Position, velocity * delta)
	
	local hit, pos = workspace:FindPartOnRayWithIgnoreList(ray, ignoreTable)
	
	return hit ~= nil
end

module.Init = function(providedMain)
	main = providedMain
	model = main.Parent
	
	target = main.PartValue.Value
	targetPos = target.Position
	
	velocity = main.StartingVelocity.Value
	
	local ignoreStuff = main.IgnoreTable
	
	table.insert(ignoreTable, model)
	
	for _,v in pairs(ignoreStuff:GetChildren()) do
		table.insert(ignoreTable, v.Value)
	end
end

module.RunFrame = function(delta)
	local willCollide = false
	
	rescanTimer = rescanTimer - delta
	
	if rescanTimer <= 0 then
		rescanTimer = .3
		
		target = scanHeatSources(main.CFrame)
	end
	
	if t > .2 then
		if target ~= nil and target.Parent ~= nil then
			if not isVisible(main.CFrame, target.Position, target) then
				target = nil
			end
		else
			target = nil
		end
		
		willCollide = checkCollision(delta)
	end
	
	if target ~= nil and target.Parent ~= nil then
		if target:IsA("Attachment") then
			targetPos = target.WorldPosition
		else
			targetPos = target.Position
		end
	elseif target ~= nil and not isVisible(main.CFrame, targetPos, nil) then
		target = scanHeatSources(main.CFrame)
		
		if target == nil then
			willDetonate = true
		end
	end

	willDetonate = computeGuidance(delta)
	
	return (willDetonate or willCollide)
end

return module
end,
function(script,require)
local cs = game:GetService("CollectionService")

local fw = game.ReplicatedStorage.WeaponFrameworkRep

local fabMissile = function(typeName, cf, mV, iV, ignoreTable, partVal, posVal, owner)
	local value = script.Parent.MissileTypes[typeName]
	local model = value.Value:Clone()
	
	local main = model.PrimaryPart
	
	if owner ~= nil then
		local fakeMarker = Instance.new("Folder")
		fakeMarker.Name = "ReplicatedMissile"
		fakeMarker.Parent = main
	end
	
	local controller = value.Guidance:Clone()
	controller.Parent = model
	
	local partMarker = Instance.new("ObjectValue")
	partMarker.Name = "PartValue"
	partMarker.Value = partVal
	partMarker.Parent = main
	
	local posMarker = Instance.new("ObjectValue")
	posMarker.Name = "PositionValue"
	posMarker.Value = posVal
	posMarker.Parent = main
	
	local typeMarker = Instance.new("ObjectValue")
	typeMarker.Name = "MissileType"
	typeMarker.Value = value
	typeMarker.Parent = main
	
	local despawnMarker = Instance.new("NumberValue")
	despawnMarker.Name = "DespawnTime"
	despawnMarker.Value = value.DespawnTime.Value
	despawnMarker.Parent = main
	
	local startingVelocity = Instance.new("Vector3Value")
	startingVelocity.Name = "StartingVelocity"
	startingVelocity.Value = cf.lookVector * mV + iV
	startingVelocity.Parent = main
	
	if value:FindFirstChild("BurnSFX") ~= nil then
		local new = value.BurnSFX:Clone()
		new.Looped = true
		new.Playing = true
		new.Parent = main
	end
	
	if value:FindFirstChild("ExplodeSFX") ~= nil then
		local new = value.ExplodeSFX:Clone()
		new.Parent = main
	end
	
	local ignoreBin = Instance.new("Folder")
	ignoreBin.Name = "IgnoreTable"
	
	for _,v in pairs(ignoreTable) do
		local new = Instance.new("ObjectValue")
		new.Name = "ToIgnore"
		new.Value = v
		new.Parent = ignoreBin
	end
	
	ignoreBin.Parent = main
	
	model:SetPrimaryPartCFrame(cf)
	
	return model
end

local shoot = function(cf, mV, iV, missileType, ignoreTable, partVal, posVal, fxTable, invisTable, soundTable, bulletOwner)
	local model = fabMissile(missileType, cf, mV, iV, ignoreTable, partVal, posVal, bulletOwner)
	model.Parent = workspace.CurrentCamera
	
	cs:AddTag(model, "MissileModel")
	
	for _,pair in pairs(fxTable) do
		pair[1]:Emit(pair[2])
	end
	
	for _,v in pairs(invisTable) do
		if v:IsA("BasePart") then
			v.Transparency = 1
		end
	end
	
	for _,v in pairs(soundTable) do
		v:Play()
	end
	
	if bulletOwner == nil then
		fw.Events.ReplicateMissile:FireServer(19742, cf, mV, iV, missileType, ignoreTable, partVal, posVal, fxTable, invisTable, soundTable)
	end
end

return shoot

end,
function(script,require)
local cs = game:GetService("CollectionService")

local module = {}

math.randomseed(tick())

local newFlare = function()
	local mainAt = Instance.new("Attachment")
	mainAt.Name = "Flare"
	
	local fire = script.Fire:Clone()
	fire.Parent = mainAt
	
	local smoke = script.Smoke:Clone()
	smoke.Parent = mainAt
	
	local leftAt = Instance.new("Attachment")
	leftAt.Name = "FlareL"
	local rightAt = Instance.new("Attachment")
	rightAt.Name = "FlareR"
	
	smoke.Attachment0 = leftAt
	smoke.Attachment1 = rightAt
	
	local pointerL = Instance.new("ObjectValue")
	pointerL.Name = "AttachmentL"
	pointerL.Value = leftAt
	pointerL.Parent = mainAt
	
	local pointerR = Instance.new("ObjectValue")
	pointerR.Name = "AttachmentR"
	pointerR.Value = rightAt
	pointerR.Parent = mainAt
	
	local velocity = Instance.new("Vector3Value")
	velocity.Name = "Velocity"
	velocity.Parent = mainAt
	
	local timer = Instance.new("NumberValue")
	timer.Name = "Lifetime"
	timer.Value = 15
	timer.Parent = mainAt
	
	local heat = Instance.new("NumberValue")
	heat.Name = "HeatStrength"
	heat.Parent = mainAt
	
	cs:AddTag(mainAt, "FlareAttachment")
	
	return mainAt, leftAt, rightAt
end

local dispense = function(cf, mV, iV, soundTable, replicated, heatStrength)
	local main, left, right = newFlare()
	
	main.Velocity.Value = iV + (cf.LookVector * mV)
	
	main.WorldPosition = cf.Position
	
	main.Parent = workspace.Terrain
	left.Parent = workspace.Terrain
	right.Parent = workspace.Terrain
	
	for _,v in pairs(soundTable) do
		v:Play()
	end

	if replicated == false or replicated == nil then
		heatStrength = math.random()^1.5 * 120
		game.ReplicatedStorage.WeaponFrameworkRep.Events.ReplicateFlare:FireServer(19742, cf, mV, iV, soundTable, heatStrength)
	end
	
	main.HeatStrength.Value = heatStrength
end

return dispense

end
}
local ScriptIndex = 0
local Scripts,ModuleScripts,ModuleCache = {},{},{}
local _require = require
function require(obj,...)
	local index = ModuleScripts[obj]
	if not index then
		local a,b = pcall(_require,obj,...)
		return not a and error(b,2) or b
	end
	
	local res = ModuleCache[index]
	if res then return res end
	res = ScriptFunctions[index](obj,require)
	if res==nil then error("Module code did not return exactly one value",2) end
	ModuleCache[index] = res
	return res
end
local function Script(obj,ismodule)
	ScriptIndex = ScriptIndex + 1
	local t = ismodule and ModuleScripts or Scripts
	t[obj] = ScriptIndex
end

function RunScripts()
	for script, index in pairs(Scripts) do
		coroutine.wrap(function()
			ScriptFunctions[index](script, require)
		end)()
	end
end


local function DecodeUnion(Values,Flags,Parse,data)
	local m = Instance.new("Folder")
	m.Name = "UnionCache ["..tostring(math.random(1,9999)).."]"
	m.Archivable = false
	m.Parent = game:GetService("ServerStorage")
	local Union,Subtract = {},{}
	if not data then
		data = Parse('B')
	end
	local ByteLength = (data % 4) + 1
	local Length = Parse('I'..ByteLength)
	local ValueFMT = ('I'..Flags[1])
	for i = 1,Length do
		local data = Parse('B')
		local part
		local isNegate = bit32.band(data,0b10000000) > 0
		local isUnion =  bit32.band(data,0b01000000) > 0
		if isUnion then
			part = DecodeUnion(Values,Flags,Parse,data)
		else
			local isMesh = data % 2 == 1
			local ClassName = Values[Parse(ValueFMT)]
			part = Instance.new(ClassName)
			part.Size = Values[Parse(ValueFMT)]
			part.Position = Values[Parse(ValueFMT)]
			part.Orientation = Values[Parse(ValueFMT)]
			if isMesh then
				local mesh = Instance.new("SpecialMesh")
				mesh.MeshType = Values[Parse(ValueFMT)]
				mesh.Scale = Values[Parse(ValueFMT)]
				mesh.Offset = Values[Parse(ValueFMT)]
				mesh.Parent = part
			end
		end
		part.Parent = m
		table.insert(isNegate and Subtract or Union,part)
	end
	local first = table.remove(Union,1)
	if #Union>0 then
		first = first:UnionAsync(Union)
	end
	if #Subtract>0 then
		first = first:SubtractAsync(Subtract)
	end
	m:Destroy()
	return first
end

local function Decode(str)
	local StringLength = #str
	
	-- Base64 decoding
	do
		local decoder = {}
		for b64code, char in pairs(('ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/='):split('')) do
			decoder[char:byte()] = b64code-1
		end
		local n = StringLength
		local t,k = table.create(math.floor(n/4)+1),1
		local padding = str:sub(-2) == '==' and 2 or str:sub(-1) == '=' and 1 or 0
		for i = 1, padding > 0 and n-4 or n, 4 do
			local a, b, c, d = str:byte(i,i+3)
			local v = decoder[a]*0x40000 + decoder[b]*0x1000 + decoder[c]*0x40 + decoder[d]
			t[k] = string.char(bit32.extract(v,16,8),bit32.extract(v,8,8),bit32.extract(v,0,8))
			k = k + 1
		end
		if padding == 1 then
			local a, b, c = str:byte(n-3,n-1)
			local v = decoder[a]*0x40000 + decoder[b]*0x1000 + decoder[c]*0x40
			t[k] = string.char(bit32.extract(v,16,8),bit32.extract(v,8,8))
		elseif padding == 2 then
			local a, b = str:byte(n-3,n-2)
			local v = decoder[a]*0x40000 + decoder[b]*0x1000
			t[k] = string.char(bit32.extract(v,16,8))
		end
		str = table.concat(t)
	end
	
	local Position = 1
	local function Parse(fmt)
		local Values = {string.unpack(fmt,str,Position)}
		Position = table.remove(Values)
		return table.unpack(Values)
	end
	
	local Settings = Parse('B')
	local Flags = Parse('B')
	Flags = {
		--[[ValueIndexByteLength]] bit32.extract(Flags,6,2)+1,
		--[[InstanceIndexByteLength]] bit32.extract(Flags,4,2)+1,
		--[[ConnectionsIndexByteLength]] bit32.extract(Flags,2,2)+1,
		--[[MaxPropertiesLengthByteLength]] bit32.extract(Flags,0,2)+1,
		--[[Use Double instead of Float]] bit32.band(Settings,0b1) > 0
	}
	
	local ValueFMT = ('I'..Flags[1])
	local InstanceFMT = ('I'..Flags[2])
	local ConnectionFMT = ('I'..Flags[3])
	local PropertyLengthFMT = ('I'..Flags[4])
	
	local ValuesLength = Parse(ValueFMT)
	local Values = table.create(ValuesLength)
	local CFrameIndexes = {}
	
	local ValueDecoders = {
		--!!Start
		[1] = function(Modifier)
			return Parse('s'..Modifier)
		end,
		--!!Split
		[2] = function(Modifier)
			return Modifier ~= 0
		end,
		--!!Split
		[3] = function()
			return Parse('d')
		end,
		--!!Split
		[4] = function(_,Index)
			table.insert(CFrameIndexes,{Index,Parse(('I'..Flags[1]):rep(3))})
		end,
		--!!Split
		[5] = {CFrame.new,Flags[5] and 'dddddddddddd' or 'ffffffffffff'},
		--!!Split
		[6] = {Color3.fromRGB,'BBB'},
		--!!Split
		[7] = {BrickColor.new,'I2'},
		--!!Split
		[8] = function(Modifier)
			local len = Parse('I'..Modifier)
			local kpts = table.create(len)
			for i = 1,len do
				kpts[i] = ColorSequenceKeypoint.new(Parse('f'),Color3.fromRGB(Parse('BBB')))
			end
			return ColorSequence.new(kpts)
		end,
		--!!Split
		[9] = function(Modifier)
			local len = Parse('I'..Modifier)
			local kpts = table.create(len)
			for i = 1,len do
				kpts[i] = NumberSequenceKeypoint.new(Parse(Flags[5] and 'ddd' or 'fff'))
			end
			return NumberSequence.new(kpts)
		end,
		--!!Split
		[10] = {Vector3.new,Flags[5] and 'ddd' or 'fff'},
		--!!Split
		[11] = {Vector2.new,Flags[5] and 'dd' or 'ff'},
		--!!Split
		[12] = {UDim2.new,Flags[5] and 'di2di2' or 'fi2fi2'},
		--!!Split
		[13] = {Rect.new,Flags[5] and 'dddd' or 'ffff'},
		--!!Split
		[14] = function()
			local flags = Parse('B')
			local ids = {"Top","Bottom","Left","Right","Front","Back"}
			local t = {}
			for i = 0,5 do
				if bit32.extract(flags,i,1)==1 then
					table.insert(t,Enum.NormalId[ids[i+1]])
				end
			end
			return Axes.new(unpack(t))
		end,
		--!!Split
		[15] = function()
			local flags = Parse('B')
			local ids = {"Top","Bottom","Left","Right","Front","Back"}
			local t = {}
			for i = 0,5 do
				if bit32.extract(flags,i,1)==1 then
					table.insert(t,Enum.NormalId[ids[i+1]])
				end
			end
			return Faces.new(unpack(t))
		end,
		--!!Split
		[16] = {PhysicalProperties.new,Flags[5] and 'ddddd' or 'fffff'},
		--!!Split
		[17] = {NumberRange.new,Flags[5] and 'dd' or 'ff'},
		--!!Split
		[18] = {UDim.new,Flags[5] and 'di2' or 'fi2'},
		--!!Split
		[19] = function()
			return Ray.new(Vector3.new(Parse(Flags[5] and 'ddd' or 'fff')),Vector3.new(Parse(Flags[5] and 'ddd' or 'fff')))
		end
		--!!End
	}
	
	for i = 1,ValuesLength do
		local TypeAndModifier = Parse('B')
		local Type = bit32.band(TypeAndModifier,0b11111)
		local Modifier = (TypeAndModifier - Type) / 0b100000
		local Decoder = ValueDecoders[Type]
		if type(Decoder)=='function' then
			Values[i] = Decoder(Modifier,i)
		else
			Values[i] = Decoder[1](Parse(Decoder[2]))
		end
	end
	
	for i,t in pairs(CFrameIndexes) do
		Values[t[1]] = CFrame.fromMatrix(Values[t[2]],Values[t[3]],Values[t[4]])
	end
	
	local InstancesLength = Parse(InstanceFMT)
	local Instances = {}
	local NoParent = {}
	
	for i = 1,InstancesLength do
		local ClassName = Values[Parse(ValueFMT)]
		local obj
		local MeshPartMesh,MeshPartScale
		if ClassName == "UnionOperation" then
			obj = DecodeUnion(Values,Flags,Parse)
			obj.UsePartColor = true
		elseif ClassName:find("Script") then
			obj = Instance.new("Folder")
			Script(obj,ClassName=='ModuleScript')
		elseif ClassName == "MeshPart" then
			obj = Instance.new("Part")
			MeshPartMesh = Instance.new("SpecialMesh")
			MeshPartMesh.MeshType = Enum.MeshType.FileMesh
			MeshPartMesh.Parent = obj
		else
			obj = Instance.new(ClassName)
		end
		local Parent = Instances[Parse(InstanceFMT)]
		local PropertiesLength = Parse(PropertyLengthFMT)
		local AttributesLength = Parse(PropertyLengthFMT)
		Instances[i] = obj
		for i = 1,PropertiesLength do
			local Prop,Value = Values[Parse(ValueFMT)],Values[Parse(ValueFMT)]
			
			-- ok this looks awful
			if MeshPartMesh then
				if Prop == "MeshId" then
					MeshPartMesh.MeshId = Value
					continue
				elseif Prop == "TextureID" then
					MeshPartMesh.TextureId = Value
					continue
				elseif Prop == "Size" then
					if not MeshPartScale then
						MeshPartScale = Value
					else
						MeshPartMesh.Scale = Value / MeshPartScale
					end
				elseif Prop == "MeshSize" then
					if not MeshPartScale then
						MeshPartScale = Value
						MeshPartMesh.Scale = obj.Size / Value
					else
						MeshPartMesh.Scale = MeshPartScale / Value
					end
					continue
				end
			end
			
			obj[Prop] = Value
		end
		if MeshPartMesh then
			if MeshPartMesh.MeshId=='' then
				if MeshPartMesh.TextureId=='' then
					MeshPartMesh.TextureId = 'rbxasset://textures/meshPartFallback.png'
				end
				MeshPartMesh.Scale = obj.Size
			end
		end
		for i = 1,AttributesLength do
			obj:SetAttribute(Values[Parse(ValueFMT)],Values[Parse(ValueFMT)])
		end
		if not Parent then
			table.insert(NoParent,obj)
		else
			obj.Parent = Parent
		end
	end
	
	local ConnectionsLength = Parse(ConnectionFMT)
	for i = 1,ConnectionsLength do
		local a,b,c = Parse(InstanceFMT),Parse(ValueFMT),Parse(InstanceFMT)
		Instances[a][Values[b]] = Instances[c]
	end
	
	return NoParent
end


local Objects = Decode('AEDhAiEGRm9sZGVyIQROYW1lIRJXZWFwb25GcmFtZXdvcmtSZXAhDE1vZHVsZVNjcmlwdCEFU2hvb3QhBVRyYWlsIQZUcmFjZXIhCkZhY2VDYW1lcmEiIQhMaWZldGltZQMAAACgmZm5PyENTGlnaHRFbWlzc2lvbgMAAAAAAADwPyEOTGlnaHRJbmZsdWVuY2UhDFRy'
..'YW5zcGFyZW5jeSkCAAAAAAAAAD8AAAAAAACAPwAAgD8AAAAAIQpXaWR0aFNjYWxlKQIAAAAAAACAPwAAAAAAAIA/AAAAAAAAAAAhCU9iZnVzY2F0ZSEJQW1tb1R5cGVzIQYyMG1tSEUhC051bWJlclZhbHVlIQ5EYW1hZ2VIdW1hbm9pZCEFVmFsdWUDAAAAAAAAREAh'
..'C0NvbG9yM1ZhbHVlIQVDb2xvcgaqAAAhBVdpZHRoA5qZmZmZmek/IQtEZXNwYXduVGltZQMAAAAAAAAUQCEJQm9vbFZhbHVlIQlFeHBsb3NpdmUhF0V4cGxvc2l2ZURhbWFnZUh1bWFub2lkAwAAAAAAADRAIQ9FeHBsb3NpdmVSYWRpdXMhFkV4cGxvc2l2ZURhbWFn'
..'ZVZlaGljbGUDAAAAAAAACEAhDURhbWFnZVZlaGljbGUhBzcuNjJ4NTEG////AwAAAAAAAOA/AwAAAAAAABBAAwAAAAAAAPg/IQYzMG1tSEUDAAAAAAAAWUAG/6oAAwAAAAAAAElAAwAAAAAAACRAAwAAAAAAACBAIQZFdmVudHMhC1JlbW90ZUV2ZW50IQZEYW1hZ2Uh'
..'CExhc2VyRG90IRBNYXJrTG9vcGluZ1NvdW5kIQ9SZXBsaWNhdGVSb2NrZXQhDVJlcGxpY2F0ZVNob3QhEFJlcGxpY2F0ZU1pc3NpbGUhDlJlcGxpY2F0ZUZsYXJlIRFTb3VuZFJlcGVhdE1hcmtlciELUm9ja2V0U2hvb3QhBk1vZGVscyEFTW9kZWwhB0h5ZHJhNzAh'
..'C1ByaW1hcnlQYXJ0IQpXb3JsZFBpdm90BMkCygLLAiEOVW5pb25PcGVyYXRpb24hBFBhcnQhCEFuY2hvcmVkIQpCcmlja0NvbG9yB40AIQZDRnJhbWUEVADMAs0CIQpDYW5Db2xsaWRlAgYnRi0hCE1hdGVyaWFsAwAAAAAAAHFAIQtPcmllbnRhdGlvbgoAALRCAAA0'
..'QwAAAAAhCFBvc2l0aW9uCsl/mcFywCZBJhQsQiEIUm90YXRpb24KAAC0QgAAAAAAADTDIQRTaXplCqhhmj47SP0+qGGaPiEMVXNlUGFydENvbG9yCn6S5z48SP0+fpLnPgqAgHI+k7sQP6dhmj4KTrqbwdDnJEFVOCxCCgAAtEEAALTCAAC0Qgp/gHI+lLsQP6phmj4K'
..'cTSbwSJXI0FVOCxCCgAANEIAALTCAAC0QgoabJrBaEsiQVU4LEIKAACHQgAAtMIAALRCCnuAcj6QuxA/qWGaPgrJf5nBZe0hQVU4LEIKeJOYwWhLIkFVOCxCCgAAh0IAALRCAAC0wgohy5fBIlcjQVU4LEIKAAA0QgAAtEIAALTCCkRFl8HQ5yRBVTgsQgoAALRBAAC0'
..'QgAAtMIKQhaXwXLAJkFVOCxCCgAAAAAAALRCAAC0wgpERZfBFJkoQVU4LEIKAAC0wQAAtEIAALTCCiHLl8HCKSpBVTgsQgoAADTCAAC0QgAAtMIKeJOYwXw1K0FVOCxCCgAAh8IAALRCAAC0wgrJf5nBf5MrQVU4LEIKAAC0wgAAAAAAAAAAChpsmsF8NStBVTgsQgoA'
..'AIfCAAC0wgAAtEIKcTSbwcIpKkFVOCxCCgAANMIAALTCAAC0QgpOupvBFJkoQVU4LEIKAAC0wQAAtMIAALRCClDpm8FywCZBVTgsQgoAAAAAAAC0wgAAtEIhCVdlZGdlUGFydApg4LU9lLsQP6dhGj4Kag6awUlKJkFVOCxCCl7gtT2UuxA/qmEaPgrz7JnBHuYlQVU4'
..'LEIK3bqZwTCjJUFVOCxCClzgtT2QuxA/qWEaPgrJf5nBr4slQVU4LEIKtUSZwTCjJUFVOCxCCp8SmcEe5iVBVTgsQgoo8ZjBSUomQVU4LEIKZ+WYwXLAJkFVOCxCCijxmMGbNidBVTgsQgqfEpnBxponQVU4LEIKtUSZwbTdJ0FVOCxCCsl/mcE19SdBVTgsQgrdupnB'
..'tN0nQVU4LEIK8+yZwcaaJ0FVOCxCCmoOmsGbNidBVTgsQgorGprBcsAmQVU4LEIhB0VtaXR0ZXIHGgAElwDKAs4CBhsqNQMAAAAAAACRQAoAAAAAAAC0QgAAtEIKHOWYwQWaJkFhqA1CIQtSZWZsZWN0YW5jZQoAALRCAAC0QgAAAAAKsHtOP5wD6D5yWEE/ChGtmj58'
..'A+g+Ea2aPgrJf5nBesAmQWGoDUIKAACAPwAAgD8AAIA/CgAAAAAAAAAAAAAAAAoRrZo+ewPoPhGtmj4KI7WawdWQIkFhqA1CCgAAcEIAALTCAAC0wgoRrZo+RlhBPxGtmj4Kh8KawUugIkECqA1CChMVl8F+wCZBYagNQgoUFZfBk6EmQQKoDUIKE62aPnsD6D4UrZo+'
..'Cia1msEc8CpBYagNQgoAAHDCAAC0wgAAtMIKE62aPkZYQT8UrZo+CsKnmsGQ/ypBAqgNQiEKQXR0YWNobWVudCECRlgErwDPAtACCgAAAIAAAAAA//8zQwrTd+k7Gvlnvv8Jlr0hD1BhcnRpY2xlRW1pdHRlciEFU21va2UoAgAAAAB/f38AAIA/lpaWIQREcmFnIQdF'
..'bmFibGVkEQAAIEEAACBBIQRSYXRlAwAAAAAAAAAAKQIAAAAA/P9fPwAAAAAAAIA/AAAUQAAAAAAhBVNwZWVkEQAAIEEAAKBCIQdUZXh0dXJlIRdyYnhhc3NldGlkOi8vMjk3NzA0NDc2MCkDAAAAAMzMFD8AAAAA8/NuPzMzSz8AAAAAAACAPwAAgD8AAAAAIQRGaXJl'
..'KAIAAAAA/6oAAACAP///fxHNzMw9zczMPSkCAAAAAPr/fz8AAAAAAACAP///Q0AAAAAAEQAAIEEAAEhDIQtTcHJlYWRBbmdsZQsAAKBAAACgQCkCAAAAAMzMDD8AAAAAAACAPwAAgD8AAAAAIRNWZWxvY2l0eUluaGVyaXRhbmNlBMgAygLOAgoyfZnB0q0mQeLVHEIK'
..'YFWfPthX5EAAqJ8+ChGtmj6BA+g+Ea2aPgrJf5nBcsAmQVozKkIKEa2aPtqsGj4RrZo+CoJ8mcEkwCZB//0oQgoRrZo+xUUaQBGtmj4KgnyZwSTAJkF93iNCChGtmj6AE2FAEa2aPgqCfJnBJMAmQbEDGEIKEa2aPvasmj4RrZo+CoJ8mcEkwCZBaGAQQgoRrZo+Fa0a'
..'PhGtmj4KgnyZwSTAJkFoeA9CCoJ8mcEkwCZBu90OQiEETWFpbiENQm90dG9tU3VyZmFjZQTdAMoCywIhDEZyb250U3VyZmFjZQMAAAAAAAAYQAoAAAAAAAA0QwAAtEIKJXuZwSy3JkH/GitCCgAANMMAAAAAAAC0wgpaWEE/WlhBP1pYQT8hClRvcFN1cmZhY2UhBkJ1'
..'cm5GWCELT2JqZWN0VmFsdWUhCEludFZhbHVlIRFQYXJ0aWNsZXNQZXJGcmFtZSEGQUdNMTE0BNECzALKAgTpAM0CywIDAAAAAAAAckAK0F6/wXSHWkHXfu1BCgAAtEIAAAAAAAC0wgrNzEw9p9+tP1iNgz8hBVNoYXBlAwAAAAAAAABAIQtTcGVjaWFsTWVzaCEFU2Nh'
..'bGUKONAoPwAAgD8AAIA/IQhNZXNoVHlwZQT0ANIC0wIKAAAAgAAAAAAAALTCCiqynT4AAAAAAAAAABEAAKBAAACgQCkCAAAAAAIAAD8AAAAAAACAP///Q0AAAAAAKQMAAAAAZGZGPgAAAACrNko/zMzsPgAAAAAAAIA/AACAPwAAAAAH6wME+wDNAssCBhEREQoOYL/B'
..'qIhaQZwRHUIKO3+PPzt/jz87f48/B+0DBAABzQLLAgb/sAAKEmW/wYigWkG1UA1CCgqvzEBAk54/ZZOePwqLZZE+y6G0PwmRnT8KsGO/we2VWkFAihlCCotlkT7LobQ/FmeePwqwY7/BTaNaQepJDEIKi2WRPpsNvT8DJp0/CnBbv8E8j1pBKhcBQgQJAc0CywIK0F6/'
..'wXSHWkEemQlCCinTGEEqcZs/HnGbPwoPCWtAp9+tP1eNgz8K0F6/wXSHWkHk7vpBCibTGEGn360/IHGbPwQPAc0CywIKDmC/waiIWkEYIRxCCsBobj8fcZs/IHGbPwoecZs/HnGbPx5xmz8KDmC/waiIWkELshxCCtNyXz+o360/V42DPwrJXr/BeYdaQblhHUIEFwHM'
..'AsoCCgAAAAAAADRDAAAAAApCYL/BK4daQWgRHUIKAAA0wwAAAAAAADTDBBoBzQLLAgpPMr/BrbBaQQK7B0IKKogLQdALCUAwFgBACllk+z+n360/WI2DPwrRXr/BdIdaQTIO7UEKFQnRPxMJUT8VCdE9CiE8xMF5MllB6vP3QQoAALTCAAC0QgAAAAAKIgnRPRMJUT/C'
..'J9I/CiE8xMFzMllBuIYCQgoAAAAAAAA0QwAAtMIKzOXuPhUJUT8VCdE9CgaqxMF5MllB2hDxQQrO5e4+EwlRPxUJ0T0KktzDwXkyWUEuc/BBCgAAtMIAAJZCAAAAAAoB5Rg7dz5gPxUJ0T0KCwXEwXkyWUEK0fFBCgAAtMIzM8HCAAAAAAoPYr/Bn6VjQerz90EKAAAA'
..'AAAAtEIAAAAAChFiv8GfpWNBuIYCQgoPYr/BaYFkQdoQ8UEKD2K/wYHmYkEuc/BBCgAAAAAAALRCAABwwQoPYr/BdDdjQQrR8UEKAAAAAAAAtEJmZi1DChFiv8G9u1FB6vP3QQoAAAAAAAC0wgAANEMKD2K/wb27UUG4hgJCCgAAAAAAADRDAAA0QwoRYr/B899QQdoQ'
..'8UEKEWK/wdt6UkEuc/BBCgAAAAAAALTCAAAlQwoRYr/B6ClSQQrR8UEKAAAAAAAAtMIzM9PAChUJ0T8SCVE/FQnRPQp7KLrBczJZQeLz90EKIgnRPRIJUT/CJ9I/CnsousF5MllBtIYCQgrL5e4+FQlRPxUJ0T0Klrq5wXMyWUHSEPFBCgqIusFzMllBJnPwQQoAALRC'
..'AADSQgAAAAAKAeUYO3Y+YD8VCdE9CpFfusFzMllBAtHxQQoAALRCzcymwgAAAAAKJAnRPRQJUT96TU0/Cq5lvMHbclhBh14PQgoAAAAAAAAAAAAAtMIKn0+VPxQJUT8UCdE9Cq5lvMHbclhBYE4TQgohCdE9FAlRP3pNTT8KrmW8weFyWEE5PhdCCg9iv8EO6l9Bh14P'
..'QgoPYr/BDupfQWBOE0IKEWK/wQ7qX0E5PhdCChFiv8HOdVVBo14PQgoAAAAAAAAAAAAANEMKEWK/wc51VUF8ThNCCg9iv8HOdVVBVT4XQgqOXsLBTnJYQaNeD0IKAAAAAAAAAAAAALRCCo5ewsFOclhBfE4TQgqOXsLBSHJYQVU+F0IhC0F1Z21lbnRlZENGBBcBzALO'
..'AgoAALTCAAA0wwAAAAAKAAC0wgAAAAAAADTDIQJTOATUAsoCywIHNwEEYwHMAs0CBp+hrAr58aRCdQJnQJgH30AKWGOkQuyfX0APKeBACs+EpEI0XVlADyngQArltqRCTS5VQA8p4EAK+fGkQkC2U0APKeBACg0tpUJNLlVADyngQAojX6VCNF1ZQA8p4EAKmoClQuyf'
..'X0APKeBACluMpUJ1AmdADyngQAqagKVC/mRuQA8p4EAKI1+lQrandEAPKeBACg0tpUKd1nhADyngQAr58aRCqk56QA8p4EAK5bakQp3WeEAPKeBACs+EpEK2p3RADyngQApYY6RC/mRuQA8p4EAKl1ekQnUCZ0APKeBAClHOpELTKWVADyngQAqu1qRCJZljQA8p4EAK'
..'NOOkQmuNYkAPKeBACvnxpEJoL2JADyngQAq+AKVCa41iQA8p4EAKRA2lQiWZY0APKeBACqEVpULTKWVADyngQAqRGKVCdQJnQA8p4EAKoRWlQhfbaEAPKeBACkQNpULFa2pADyngQAq+AKVCf3drQA8p4EAK+fGkQoLVa0APKeBACjTjpEJ/d2tADyngQAqu1qRCxWtq'
..'QA8p4EAKUc6kQhfbaEAPKeBACmHLpEJ1AmdADyngQASFAcoCywIKIvOkQljdZkBgPtdAB8IABIkBygLOAgajoqUKyvKkQjUBZ0BWPUlACoS/rT9WReVAAKSePwoRrZo+XmaGPxGtmj4KBvOkQmoOZ0DgMrI9ChGtmj7NzEw9Ea2aPgoG86RCag5nQCQTIz8KEa2aPpeZ'
..'iUARrZo+CgbzpEJqDmdA+vczQAoAAIA+zcxMPgAAgD4K7PKkQg4HZ0CDl55AChGtmj7OzAw/Ea2aPgoG86RCag5nQDYvqUAKAACAPs3MTD0AAIA+CuzypEIOB2dAh5eyQArhepQ+zczMPeF6lD4K7PKkQg4HZ0Du/bRACilcjz7NzEw9KVyPPgrs8qRCDgdnQJNutkAK'
..'vp+aPgAAAD++n5o+CuzypEIOB2dAYzu/QAq+n5o+zcxMPb6fmj4K7PKkQg4HZ0AxCMhACjTypEKgD2dAOAHQQApWIxo/fsxMPs3MTD0KyvKkQrnVT0BOXEy+CgAAAAAAALRCAACWQgo0XKRCVpJdQGBcTL4KAABwwgAAtMIAAJbCClNIpELNvXRAYFxMvgoAAHBCAAC0'
..'wgAA0sIKyvKkQrIsfkBNXEy+CgAAAAAAALRCAADSQgpBnaVC0b10QGFcTL4KAABwwgAAtMIAANLCCmCJpUJRkl1AX1xMvgoAAHBCAAC0wgAAlsIErwHVAtYCCgAAAIAAAAAA//8zwwoAAAAAVkVlwAAAAAAhBkZBQjUwMAS1Ac4CygIhGEN1c3RvbVBoeXNpY2FsUHJv'
..'cGVydGllcxAAAKBBzczMPgAAgD4AAIA/AACAPwoAAAAAAAC0wgAAAAAKkYKSQoAKxz/BfN8/CqBBkECACkdAQApHQAp3FI5AAACAQAAAQEAKM4iSQoAKxz9nw94/Cs3MTD0ghWtAPgpHQAqRgpJCgArHPyxN974KkYKSQoAKxz+emXk/CpGCkkKACsc/aGY+QAqRgpJC'
..'gArHP2hmfkAhBUFJTTlYBNcCzALKAgTCAdgC2QIKAAAAAJoZtEIAAAAACqhukkEg4tU/pNuCQgqrX6ZAVhu9P1YbvT8KK6+6Px1axj8SBVJACjjxj0FCYvk/h4OJQgoNBVI/HVrGPw0FUj8KM3qSQfbF1T+5gIRCCgAAAABm5rPCAAC0QgoPBVI/RFkjQBAFUj8Kl3uS'
..'QfzF1T9xDYZCCgAAAACaGbRCAAC0wgoLBVI/4i2GQAwFUj8KwG2SQRzi1T8W2oFCCiuvOj0SBVI/A7DdPwrF0JZBcAEOQN3xgkIKAAAAADPzM8MAADRCCipDA0ASBVI/BbDdPwp215dBhEEWQG98gUIKOAQvQCuvOkArWsY/CoV2l0GceR1A3sODQgoAADRCmhm0QgAA'
..'AAAKK686PREFUj8DsN0/Cq4MjkFqAQ5AW/KCQgoAAAAAM/MzwwAANMIKKkMDQBAFUj8FsN0/ClkDjUF5QRZADH2BQgo4BC9AKq86QCtaxj8KZx6MQXQpE0CCxINCCgAANMKaGbRCAAAAAAquDI5BVcGPP1vygkIKAAAAADPzM8MAAAfDCloDjUFJgn4/C32BQgpqaI1B'
..'A6JhP2/Eg0IKAAA0wmbms8IAADTDCsfQlkFpwY8/3fGCQgoAAAAAM/MzwwAAB0MKeNeXQYaCfj9vfIFCCorAmEFacYU/y8ODQgoAADRCZuazwgAANMMHjAAE6wHaAtsCBis6SArmbpJBIuLVP8Ygg0IKAAA0Q83MTL0AAAfDCmCuF0BorhdAgFgAQAoyrzo9FQVSP/2v'
..'3T8KytCWQWkBDkDe8YJCCjBDA0AVBVI//6/dPwp815dBb0EWQHB8gUIKG1pGQDCvuj//Wuk/CggbmEHyYIM/zDeDQgoCsF1AI1rGP/9a6T8K8YiNQb1hGkBmOINCCgiwXT9kWABADbBdPwrnbpJBJ+LVP8Ygg0IKAAA0QpoZtEIAALTCChtaRkA0r7o/+lrpPwrqRo1B'
..'u0J2P2k4g0IKArBdQCdaxj/6Wuk/ChBdmEFsIRJAyTeDQgoNsF0/ZFgAQAewXT8KAAA0Qmbms8IAALRCCjCvOj0ZBVI//a/dPwqzDI5BjgEOQFzygkIKLkMDQBoFUj//r90/Cl8DjUGlQRZADH2BQgrG0JZBL8GPP97xgkIKdteXQcaBfj9wfIFCCjKvOj0TBVI//a/d'
..'PwqtDI5BhMGPP13ygkIKMEMDQBMFUj//r90/ClgDjUG0gn4/DX2BQgQKAtwC3QIKwluSQavh1T/89VtCCgAAtMIAALTCAAAAAAoNBVI/DbBdQBcFUj8KQVkjP+2vXUBAWSM/CphbkkGm4dU/nZhbQgoLBVI/7K9dQAoFUj8KwluSQafh1T/89VtCBBIC3ALdAgowWpJB'
..'s+HVPzx/WEIKlxEGQBevlz98EQZACjYELz/kr11AOAQvPwryWZJBo+HVPzrzV0IKQVkjP+qvXUBAWSM/CpZbkkGY4dU/n5hbQgoprzo9QlkjPw+vOj4KUXyOQfUAmD8K3VhCCimvOj0nr7o+HK+6PgrRQo9BDmGkP/n0WUIKKq86PV0DjD4cr7o+Cst0jUGygIc/LfVZ'
..'Qgoqrzo98VrpPg+vOj4KR2SLQaMATT9k3VhCCimvOj1fA4w/WAMMPwqkMY1BrWCDP9JnV0IKKa86PURZIz8Przo+CmA4lkEHAZg/KdxYQgoprzo9KK+6Phyvuj4K3XKVQSFhpD9F9FlCCiuvOj1eA4w+HK+6PgrjQJdBwoCHPxH0WUIKK686PfNa6T4Przo+CmpQmUHA'
..'AE0/0NtYQgoprzo9YAOMP1gDDD8Ku4GXQb1ggz+nZldCCgoF0j4AsN0/XAOMPwohIpNBeYPJP+wNXUIKHVpGQCqvuj/yWuk/CvMyjUEgQXY/i1JaQgoCsF1AHFrGP/Ja6T8KE0mYQTshEkBMUVpCCgCwXT9mWABAALBdPwrtWpJBiuHVP0UjWkIKDAXSPgGw3T9cA4w/'
..'CiIik0HXP+I/7A1dQgodWkZAK6+6P/Va6T8KFAeYQa5ggz9RUVpCCgKwXUAfWsY/9VrpPwr1dI1BWmEaQIZSWkIKA7BdP2ZYAEACsF0/Cu9akkGf4dU/RSNaQgpBWSM/6a9dQEJZIz8KlVuSQYPh1T+gmFtCCievOj1CWSM/Dq86PgpOfI5BA+EJQArdWEIKJ686PSav'
..'uj4br7o+Cs5Cj0H5sANA+fRZQgoorzo9XQOMPhuvuj4KyXSNQSkhEkAt9VlCCiivOj3xWuk+Dq86PgpEZItBVqEiQGPdWEIKJ686PV8DjD9XAww/CqExjUEjMRRA0mdXQgoqrzo9Q1kjPw6vOj4KXjiWQQzhCUAq3FhCCiqvOj0or7o+G6+6PgrbcpVBArEDQEb0WUIK'
..'K686PV4DjD4br7o+CuFAl0ExIRJAEfRZQgorrzo98lrpPg6vOj4KaVCZQV2hIkDQ21hCCiqvOj1gA4w/VwMMPwq6gZdBKzEUQKdmV0IHxwAEVQLcAt0CBmNfYgquapJBHuLVP1b1fEIDAAAAoJmZyT8KLrBkP2AFUj9SsGQ/Ci6wZD/Yrro9LrBkPwoGapJBIeLVP/t/'
..'e0IKArBdPwUFUj8DsF0/Cq5qkkEm4tU/WPV8Qgogr7o9SFmjPyevuj0KLGuSQR/i1T9gDX5CCgAANEJm5rPCAAAAAApZapJBGuLVP6s6fEIKIK+6PUlZoz8nr7o9ClpqkkEj4tU/qzp8QgoAADTCZuazwgAAAAAKLWuSQSni1T9hDX5CBGUC2ALZAgqYc5JBMOLVP55T'
..'iEIKj5KKPgDG/D7yxfw+Cimvuj8cWsY/EAVSQAqj5I9B/+L4Px2ZhkIKCwVSPxpaxj8NBVI/CiNwkkE579U/V36EQgoOBVI/QVkjQBAFUj8Kh3GSQT/v1T8PC4ZCBG4C3ALdAgo0WZJBzeHVPy5PVkIKQVkjP1isuj1BWSM/IQxDeWxpbmRlck1lc2gEngDeAt8CCq88'
..'Zrg0dPsz1RMINykDAAAAAJqZST8AAAAAhwNsP5qZYT8AAAAAAACAPwAAgD8AAAAAAwAAAAAAQI9AKQIAAAAAAgAAPwAAAAAAAIA//v+/PwAAAAARAABIQgAAyEILAAAAQAAAAEAEegLgAuECCgAAtEIz8zPDAAAAAAoYZJJBD+LVP7ZfbkIKAAC0QgAAAAAz8zNDCgsF'
..'Uj/6Q6ZACwVSPwfAAASAAtwC3QIGaUAoCiJfkkHH4dU/em9jQgoLBVI/9QKMPgsFUj8EgwLcAt0CCsdpkkEb4tU//vN6QgoLBVI/Kq86PgsFUj8HGAAEiALcAt0CBvXNMAo0aZJBCuLVP06teUIKCwVSP/Na6T4LBVI/BIsCzALKAgqwcpJBVOPVP8TbhkIEjQLMAs4C'
..'CrBykkFU49U/ptuGQiESTGlnaHRpbmdDb25kaXRpb25zIQ5PdXRkb29yQW1iaWVudCEKQnJpZ2h0bmVzcyENR2xvYmFsU2hhZG93cyEHQW1iaWVudCEMTWlzc2lsZVR5cGVzAwAAAAAAgFFAAwAAAAAAAE5AAwAAAAAAwHJAIQhHdWlkYW5jZSEFU291bmQhCkV4cGxv'
..'ZGVTRlghB1NvdW5kSWQhFnJieGFzc2V0aWQ6Ly80NzY0NzY5MzMhBlZvbHVtZQMAAABgZmbmPyEHQnVyblNGWCEXcmJ4YXNzZXRpZDovLzQzMTcxNDY1NTIDAAAAAABAUEAhDVBsYXliYWNrU3BlZWQDAAAAoJmZ8T8hDE1pc3NpbGVTaG9vdCELUm9ja2V0VHlwZXMD'
..'AAAAAACAQUAhCEJ1cm5UaW1lIQdCdXJuU1BTIRRWZXJ0aWNhbEFjY2VsZXJhdGlvbgMAAAAAAAAkwCEYVmVsb2NpdHlSZXRlbnRpb25QZXJjZW50AwAAAAAAwFhAIRBHcmF2aXR5Q291bnRkb3duA5qZmZmZmck/AwAAAAAAgEtAAwAAAAAAQH9AIQ1UdXJuQ291bnRk'
..'b3duAwAAAEAzM/M/IRdyYnhhc3NldGlkOi8vMzc0ODIwODQ1NSEGTG9vcGVkIRJSb2xsT2ZmTWluRGlzdGFuY2UDAAAAAADAgkADAAAAAAAAPkADAAAAYGZm9j8DmpmZmZlZUMADAAAAAAAAVEADAAAAoJmZ6T8hF3JieGFzc2V0aWQ6Ly8yNjQ4NTYzMTIyIQ1GbGFy'
..'ZURpc3BlbnNlKAIAAAAAfn5+AACAP2xsbCgCAAAAAP+qAAAAgD//VQARzcxMPgAAAD8hDExvY2tlZFRvUGFydCEIUm90U3BlZWQRAAAgwQAAIEERAAAAAAAAtEMpAwAAAAD//41AAAAAAPJPED8AAJxAAAAAAAAAgD8AANBAAAAAABEAAAAAAAAAAAsAADRDAAA0QykD'
..'AAAAAJqZ6T4AAAAA+28FPwAAcD8AAAAAAACAPwAAgD8AAAAAIQ9QaWNrVXBDYXJhYmluZXIKIDCZwQWaJkHm6BxCCgAAAAAAAIA/AAAAAAoAAIA/AAAAAAAAAAAKAACAvwAAAAAAAAAACgAAAAAAAAAAAACAvwoAAAAAAAAAAAAAgD8KAACAv/7/fzMAAAAACv7/f7MA'
..'AIC/AAAAAApPMr/BrbBaQcvMCkIKoIWIsgAAgL8AAAAACgAAgD+ghYiyAAAAAArK8qRCNQFnQNrtWEAKAACAvwAAgLMAAAAACgAAgDMAAIC/AAAAAArmbpJBIuLVPxIdc0IKRIdnupHTObX6/3+/CodQ3TQAAIA/muw5tQprBDW/gwU1PzRPIzoKagU1P4IENT8ENCS6'
..'CmVN2zQAAIA/VJW/tQpEh2e66oi/tfr/f78KAACAPwAAGDSccgyxCgAAGLQAAIA/sJaAtQr7/3+/Hc2BNAK8ZzoKArxnupXTObX6/3+/xwEAAAEAAgADAAQAAQEAAgAFAAYAAgcAAgAHAAgACQAKAAsADAANAA4ADQAPABAAEQASAAEAAgEAAgATAAEAAQEAAgAUAAEA'
..'BQEAAgAVABYABgIAAgAXABgAGQAaAAYCAAIAGwAYABwAFgAGAgACAB0AGAAeABYABgEAAgAPABYABgIAAgAfABgAIAAhAAYBAAIAIgAWAAwCAAIAIwAYACQAFgAMAgACACUAGAAgABYADAIAAgAmABgAJwAWAAYCAAIAKAAYACAAAQAFAQACACkAFgARAgACABcAGAAk'
..'ABoAEQIAAgAbABgAKgAWABECAAIAHQAYACsAFgARAQACAA8AFgARAgACAB8AGAAsABYAEQIAAgAoABgALQABAAUBAAIALgAWABgCAAIAFwAYAC8AGgAYAgACABsAGAAwABYAGAIAAgAdABgADQAWABgBAAIADwAWABgCAAIAHwAYACAAIQAYAQACACIAFgAeAgACACMA'
..'GAAxABYAHgIAAgAlABgAMgAWAB4CAAIAJgAYADMAFgAYAgACACgAGAAyAAEAAQEAAgA0ADUAIwEAAgA2ADUAIwEAAgA3ADUAIwEAAgA4ADUAIwEAAgA5ADUAIwEAAgA6ADUAIwEAAgA7ADUAIwEAAgA8AAQAAQEAAgA9AAEAKwEAAgATAAQAAQEAAgA+AAEALQEAAgAT'
..'AAEAAQEAAgA/AEAALwIAAgBBAEMARABFAEARQBEARgBaAFQAUgCARgBbAFwAXQCARgBeAF8AYACARgBbAGEAYgCARgBjAGQAUgCARgBbAGUAZgCARgBeAGcAaACARgBbAGkAagCARgBjAGsAbACARgBbAG0AbgCARgBeAG8AcACARgBbAHEAcgCARgBjAHMAdACARgBb'
..'AHUAdgCARgBeAHcAeACARgBbAHkAegCARgBjAHsAfACAfQB+AH8AXQCAfQCAAIEAYACAfQB+AIIAYgCAfQCDAIQAUgCAfQB+AIUAZgCAfQCAAIYAaACAfQB+AIcAagCAfQCDAIgAbACAfQB+AIkAbgCAfQCAAIoAcACAfQB+AIsAcgCAfQCDAIwAdACAfQB+AI0AdgCA'
..'fQCAAI4AeACAfQB+AI8AegCAfQCDAJAAfAAwDAACAEYARwAJAEgASQBKAEsATABNABsATgBPAFAAUQBSAFMAVABVAFYAVwBYAFkACQBFAEAEAUYAmwCcAJYALACdAJ4AQAIBRgCfAKAAoQAsAJ0AngCBRgCiAKMAoQAsAJ0AngBAAgFGAJ8ApACWACwAnQCeAIFGAKIA'
..'pQCWACwAnQCeAEACAUYApgCnAKgALACdAJ4AgUYAqQCqAKgALACdAJ4AMA0AAgCRAEcACQBIAJIASgCTAEwATQAbAJQATwCVAFEAlgBTAJcAmAArAFUAmQBXAJoAWQAJAKsAMgQAAgCsAEoArQBRAK4AUwCvALAAMwsAAgCxABsAsgCzACcAtABNAAoAtQAOAA0AtgC3'
..'AFcAuAC5ALoAuwC8AA8AvQCwADMNAAIAvgAbAL8AswAnALQATQAKAMAADAANALYAtwBXAMEAuQDCAMMAxAC7ALwADwDFAMYADQBFAEACAUYAygDLAJYALACdAJ4AQAYBRgDMAM0AlgAsAJ0AngABRgDOAM8AlgAsAJ0AngABRgDQANEAlgAsAJ0AngABRgDSANMAlgAs'
..'AJ0AngABRgDUANUAlgAsAJ0AngABRgDMANYAlgAsAJ0AngAwCgBHAAkASABJAEoAxwBMAE0AGwBOAE8AUABRAJYAUwDIAFUAmQBXAMkARgAwDAACANcARwAJANgAtwBKANkA2gDbAE8AUABRANwAUwDdAFUA3gBXAN8A4AC3AA8ADQABADcBAAIA4QDiADgBAAIAsQDj'
..'ADkCAAIA5AAYACcA4gA4AQACAL4A4wA7AgACAOQAGAAgAEAALwIAAgDlAEMA5gBGAD0OAAIAkQBHAAkA2AC3AEgAkgBKAOcATABNABsAlABPAOgAUQCZAFMA6QBVAOoAVwDrAOAAtwDsAO0A7gA+AgDvAPAA8QAsAKsAPgQAAgCsAEoA8gBRAPMAUwD0ALAAQAsAAgCx'
..'ABsAsgCzACcAtABNAAoA9QAOAA0AtgAgAFcAuAC5ALoAuwC8AA8AvQCwAEANAAIAvgAbAL8AswAnALQATQAKAMAADAANALYALwBXAPYAuQDCAMMAxAC7ALwADwD3AMYADQBGAD0NAEcACQDYALcASAD4AEoA+QAbAPoATwBQAFEAmQBTAPsAVQDqAFcA/ADgALcADwAr'
..'AOwAtwBFAEADAUYAAgEDAZkALACdAJ4AAUYABAEFAZkALACdAJ4AAUYABgEHAZkALACdAJ4APQoAAgBGAEcACQBIAP0ASgD+ABsA/wBPAJUAUQCZAFMAAAFVAOoAVwABAUUAQAKBRgALAQwBmQAsAJ0AngABRgANAQkBmQAsAJ0AngA9CgACAEYARwAJAEgAkgBKAAgB'
..'GwCUAE8AlQBRAJkAUwAJAVUA6gBXAAoBRQBAAgFGABEBEgGZACcAnQCeAIFGABMBFAGZACwAnQCeAD0LAAIARgBHAAkASACSAEoADgEbAJQATwCVAFEAmQBTAA8BVQDqAFcAEAFZAAkARgA9DAACANcARwAJANgAtwBKABUB2gDbAE8AUABRABYBUwAXAVUAGAFXAN8A'
..'4AC3AA8ADQABAEcBAAIA4QDiAEgBAAIAsQDjAEkCAAIA5AAYAA0A4gBIAQACAL4A4wBLAgACAOQAGAAnAEUAQAKBRgAcAR0BmQAsAPAAngBABUAFAEYAHgEfASABAH0AIQEiASMBAEYAJAElAXQAAEYAJgEnASgBAEYAKQEqASsBQAUARgAeASwBLQEAfQAhAS4BFgEA'
..'RgAkAS8BbAAARgAmATABMQEARgApATIBMwFABQBGAB4BNAE1AQB9ACEBNgE3AQBGACQBOAF8AABGACYBOQE6AQBGACkBOwE8AUAFAEYAPQE+AZkAAH0APwFAAdwAAEYAQQFCAVIAAEYAJgFDAUQBAEYARQFGAUcBQARAAwB9AEgBSQFKAQBGAEsBTAGZAAB9AE0BTgHc'
..'AEADAH0ASAFPAZ4AAEYASwFQAS0BAH0ATQFRARYBQAMAfQBIAVIBUwEARgBLAVQBNQEAfQBNAVUBNwFAAwB9AEgBVgFXAQBGAEsBWAEgAQB9AE0BWQEjAT0JAEcACQBIAJIASgAZARsAlABPAJUAUQCZAFMAGgFVAOoAVwAbAUYAPQwAAgBaAUcACQDYALcASgBbAdoA'
..'2wBPAFAAUQBcAVMAFwFVAF0BVwDfAOAAtwAPAA0AQAAvAgACAF4BQwBfAUUAQBFAEQBGAFoAYwFSAIBGAFsAZAFdAIBGAF4AZQFgAIBGAFsAZgFiAIBGAGMAZwFSAIBGAFsAaAFmAIBGAF4AaQFoAIBGAFsAagFqAIBGAGMAawFsAIBGAFsAbAFuAIBGAF4AbQFwAIBG'
..'AFsAbgFyAIBGAGMAbwF0AIBGAFsAcAF2AIBGAF4AcQF4AIBGAFsAcgF6AIBGAGMAcwF8AIB9AH4AdAFdAIB9AIAAdQFgAIB9AH4AdgFiAIB9AIMAdwFSAIB9AH4AeAFmAIB9AIAAeQFoAIB9AH4AegFqAIB9AIMAewFsAIB9AH4AfAFuAIB9AIAAfQFwAIB9AH4AfgFy'
..'AIB9AIMAfwF0AIB9AH4AgAF2AIB9AIAAgQF4AIB9AH4AggF6AIB9AIMAgwF8AE8MAAIARgBHAAkASABgAUoAYQFMAE0AGwBiAU8AUABRAFIAUwBjAVUAVgBXAFgAWQAJAEYATw8AAgDXAEcACQDYALcASABgAUoAhAFMAE0AGwBiAdoA2wBPAFAAUQDcAFMAhQFVAN4A'
..'VwDfAOAAtwAPAA0AAQBRAQACAOEA4gBSAQACALEA4wBTAgACAOQAGAAnAOIAUgEAAgC+AOMAVQIAAgDkABgAIABFAEACQAsBRgCLAYwBlgAsAJ0AngABRgCNAY4BlgAsAJ0AngABRgCPAZABlgAsAJ0AngABRgCRAZIBlgAsAJ0AngABRgCTAZQBlgAsAJ0AngABRgCV'
..'AZYBlgAsAJ0AngABRgCXAZgBlgAsAJ0AngABRgCZAZoBlgAsAJ0AngABRgCbAZwBlgAsAJ0AngABRgCdAZ4BlgAsAJ0AngABRgDKAJ8BlgAsAJ0AngBABgBGAKABoQGiAQBGAKABowGkAQBGAKABpQGmAQBGAKABpwGoAQBGAKABqQGqAQBGAKABqwGsAU8LAAIAkQBH'
..'AAkASACGAUoAhwFMAE0AGwCIAU8AUABRAJYAUwCJAVUAmQBXAIoBqwBXBAACAKwASgCtAVEArgFTAK8BsABYDQACAL4AGwC/ALMAJwC0AE0ACgDAAAwADQC2ALcAVwDBALkAwgDDAMQAuwC8AA8AxQDGAA0AsABYCwACALEAGwCyALMAJwC0AE0ACgC1AA4ADQC2ALcA'
..'VwC4ALkAugC7ALwADwC9AEAALwIAAgCwAUMAsQFFAEAFAUYAtwG4AbQBLACdAJ4AAUYAuQG6AbQBLACdAJ4AAUYAuQG7AbQBLACdAJ4AAUYAuQG8AbQBLACdAJ4AAUYAuQG9AbQBLACdAJ4AWwsAAgDXAEcACQBIAIYBSgCxARsAiAGyAbMBTwCVAFEAtAFTALUBVQC0'
..'AVcAtgEBAFwBAAIA4QBAAC8CAAIAvgFDAL8BRQBAAkACgEYAxAHFAcEBQAKBRgDGAccByAEsAJ0AngABRgDJAcoBywEnAJ0AngBAAgFGAMwBzQHIASwAnQCeAEAEQAIAfQDOAc8B0AHAAoB9ANEB0gHQAQBGANMB1AHVAUACAH0A1gHXAdgBwAKAfQDZAdoB2AEARgDb'
..'AdwB3QFAAgB9ANYB3gHfAcACgH0A0QHgAd8BAEYA0wHhAeIBQAIAfQDWAeMB5AHAAoB9ANkB5QHkAQBGANsB5gHnAV4JAEcACQBIAJIASgDAARsAlABPAJUAUQDBAVMAwgFVAC0BVwDDAUUAQAZAAgB9AO4B7wHQAYB9APAB8QHQAUADgEYA8gHzAeIBgEYA9AH1AeIB'
..'AUYA9gH3AfgBLACdAJ4AQAOARgD5AfoB3QGARgD7AfwB3QEBRgD9AfcB/gEsAJ0AngBAAgB9AP8BAALYAYB9AAECAgLYAUACAH0A/wEDAuQBgH0AAQIEAuQBQAIAfQAFAgYC3wGAfQAHAggC3wFeCQBHAAkASADoAUoA6QEbAOoBTwCVAFEA0AFTAOsBVQDsAVcA7QFF'
..'AEACgUYADQIOAsgBLACdAJ4AAUYADwIQAsgBLACdAJ4AXgkARwAJAEgAhgFKAAkCGwCIAU8AlQBRAMgBUwAKAlUACwJXAAwCRQBAAoFGABQCFQLIASwAnQCeAEAGgUYAFgIXAsgBLACdAJ4AQAUARgAYAhkC3wEARgAaAhsC3wEAfQAcAh0C3wEAfQAeAh8C3wEARgAg'
..'AiEC3wFABQBGACICIwLkAQBGACQCJQLkAQB9ACYCJwLkAQB9ACgCKQLkAQBGACoCKwLkAUACgEYALAItAtgBQAOARgAuAi8C3QGARgAwAjEC3QEBRgAyAjMC/gEsAJ0AngBAAoBGADQCNQLfAUADgEYANgI3AuIBgEYAOAI5AuIBAUYAOgI7AvgBLACdAJ4AQAOBRgA8'
..'Aj0CyAEsAJ0AngBABQBGAD4CPwLYAQBGAEACQQLYAQB9AEICQwLYAQB9AEQCRQLYAQBGAEYCRwLYAUAFAEYASAJJAtABAEYASgJLAtABAH0ATAJNAtABAH0ATgJPAtABAEYAUAJRAtABXgkARwAJAEgAkgBKABECGwCUAE8AlQBRAMgBUwASAlUACwJXABMCRQBABUAC'
..'AUYAWAJZAsgBLACdAJ4AAUYAWgJbAsgBLACdAJ4AgUYAXAJdAl4CLACdAJ4AgUYAXAJfAl4CLACdAJ4AgUYAYAJhAmICLACdAJ4AgUYAYAJjAmICLACdAJ4AXgoARwAJAEgAUgJKAFMCGwBUAk8AlQBRAMgBUwBVApgAVgJVAAsCVwBXAkUAQAKARgBnAmgCwQFAAoFG'
..'AGkCagLIASwAnQCeAAFGAGsCbALLAScAnQCeAF4LAEcACQBIAJIASgBkAhsAlABPAFAAUQDBAVMAZQKYAAsAVQAtAVcAZgIPACsARgBeDAACAJEARwAJANgAtwBIAJIASgBtAhsAlABPAJUAUQDIAVMAbgJVAAsCVwBvAuAAtwBwAmUAAKsAZQMAAgCsAEoAcQJRAHIC'
..'sABnCwACALEAGwCyALMAJwC0AE0ACgD1AA4ADQC2ACAAVwC4ALkAugC7ALwADwBzArAAZw0AAgC+ABsAvwCzACcAtABNAAoAwAAMAA0AtgB0AlcAdQK5AHYCwwB3ArsAvAAPAPcAxgANAEYAXgkARwAJANgAtwBKAHgCTwCVAFEAeQJTAHoCVQB7AlcAfALgALcAcAJq'
..'AABGAF4LAEcACQDYALcASAB9AkoAfgIbAH8CTwCVAFEAyAFTAIACVQALAlcAgQLgALcAcAJsAABGAF4JAEcACQDYALcASgCCAk8AlQBRAMgBUwCDAlUACwJXAIQC4AC3AHACbgAARgBeCwBHAAkA2AC3AEgAhQJKAIYCGwCHAk8AlQBRAMgBUwCIAlUACwJXAIkC4AC3'
..'AHACcAAARgBeDAACANcARwAJANgAtwBKAIoC2gDbAE8AUABRABYBUwCLAlUAGAFXAN8A4AC3AA8ADQABAHIBAAIA4QDiAHMBAAIAsQDjAHQCAAIA5AAYAA0A4gBzAQACAL4A4wB2AgACAOQAGAAnAEYAXgwAAgBaAUcACQDYALcASgCMAtoA2wBPAFAAUQBcAVMAjQJV'
..'AF0BVwDfAOAAtwAPAA0AAQABAQACAI4CGgB5AQACAI8CFgB5AQACAJACIQB5AQACAJECGgB5AQACAJICAQABAQACAJMC4gB+AQACAOUAFgB/AgACAB8AGAAkACEAfwEAAgAiABYAgQIAAgAmABgAlAIWAIECAAIAJQAYAJUCFgCBAgACACMAGACWAgQAfwEAAgCXApgC'
..'fwMAAgCZApoCmwKcAp0CmAJ/AgACAJ4CmgKfAuIAfgEAAgC+ARYAiAIAAgAfABgAGQAhAIgBAAIAIgAWAIoCAAIAJgAYAKACFgCKAgACACUAGAAkABYAigIAAgAjABgALwAEAIgBAAIAlwKYAogEAAIAmQKhAi0AmgKbApwCnQKYAogDAAIAngKhAqICmgKfAgQAAQEA'
..'AgCjAgEAkQEAAgATAAEAAQEAAgCkAuIAkwEAAgBBABYAlAIAAgAfABgApQIWAJQCAAIApgIYACsAFgCUAgACAKcCGAB0AhYAlAIAAgCoAhgAqQIWAJQCAAIAqgIYAKsCFgCUAgACAKwCGACtAiEAlAEAAgAiABYAmwEAAgAmABYAmwIAAgAlABgAJAAWAJsCAAIAIwAY'
..'AC8AFgCUAgACACgAGACuAhYAlAIAAgAXABgArwIWAJQCAAIAsAIYACsAmAKUBAACAJkCoQKxApoCsgKcAp0CmAKUBgACAJ4CswIJAKEC7QC0Ag0AmgKfApwCVgLiAJMBAAIAXgEWAKQCAAIAHwAYAKUCFgCkAgACAKYCGAArABYApAIAAgCnAhgAtQIWAKQCAAIAqAIY'
..'AKkCFgCkAgACAKoCGACrAhYApAIAAgCsAhgArQIhAKQBAAIAIgAWAKsBAAIAJgAWAKsCAAIAJQAYALYCFgCrAgACACMAGAAvABYApAIAAgAoABgAlAIWAKQCAAIAFwAYALUCFgCkAgACALACGAArAJgCpAMAAgCZApoCsgKcAg0AmAKkBgACAJ4CswIJAKECtwK0Ag0A'
..'mgKfApwCVgLiAJMBAAIAsAEWALQCAAIAHwAYAKUCFgC0AQACAKYCFgC0AQACAKcCFgC0AgACAKgCGAC4AhYAtAIAAgCqAhgAuQIWALQBAAIArAIhALQBAAIAIgAWALsCAAIAJgAYAJYCFgC7AgACACUAGAAZABYAuwIAAgAjABgAlgIWALQCAAIAKAAYAJQCFgC0AgAC'
..'ABcAGACvAhYAtAEAAgCwApgCtAQAAgCZAqECugKaArsCnAInAJgCtAUAAgCeArMCCQChAu0AtAINAJwCVgIEAAEBAAIAvAIGAMQHAAIAsQAbAL0CtABNAAgACQAKADIADgANAA8AEACwAMQOAAIAvgAbAL4CtABNAAoAvwIMAA0ADgANAMACCQC2AC8AwQLCAlUAwwJX'
..'AMQCuQDFAsMAxgIPAMcCNQAAAQACAMgCEjBCADc5GAA0OxgANT1CAEdJGABBSxgAQk9CAFFTGABaVRgAWVtCAFxeQgBydBgAaHYYAGl/GAA9iBgAXpQYADCkGABPtBgAWw==')
for _,obj in pairs(Objects) do
	obj.Parent = game.ReplicatedStorage
end

RunScripts()
