-- Converted using Mokiros's Model to Script Version 3
-- Converted string size: 9000 characters
local function DecodeUnion(Values,Flags,Parse,data)
	local m = Instance.new("Folder")
	m.Name = "UnionCache ["..tostring(math.random(1,9999)).."]"
	m.Archivable = false
	m.Parent = game:GetService("ServerStorage")
	local Union,Subtract = {},{}
	if not data then
		data = Parse('B')
	end
	local ByteLength = (data % 4) + 1
	local Length = Parse('I'..ByteLength)
	local ValueFMT = ('I'..Flags[1])
	for i = 1,Length do
		local data = Parse('B')
		local part
		local isNegate = bit32.band(data,0b10000000) > 0
		local isUnion =  bit32.band(data,0b01000000) > 0
		if isUnion then
			part = DecodeUnion(Values,Flags,Parse,data)
		else
			local isMesh = data % 2 == 1
			local ClassName = Values[Parse(ValueFMT)]
			part = Instance.new(ClassName)
			part.Size = Values[Parse(ValueFMT)]
			part.Position = Values[Parse(ValueFMT)]
			part.Orientation = Values[Parse(ValueFMT)]
			if isMesh then
				local mesh = Instance.new("SpecialMesh")
				mesh.MeshType = Values[Parse(ValueFMT)]
				mesh.Scale = Values[Parse(ValueFMT)]
				mesh.Offset = Values[Parse(ValueFMT)]
				mesh.Parent = part
			end
		end
		part.Parent = m
		table.insert(isNegate and Subtract or Union,part)
	end
	local first = table.remove(Union,1)
	if #Union>0 then
		first = first:UnionAsync(Union)
	end
	if #Subtract>0 then
		first = first:SubtractAsync(Subtract)
	end
	m:Destroy()
	return first
end

local function Decode(str)
	local StringLength = #str
	
	-- Base64 decoding
	do
		local decoder = {}
		for b64code, char in pairs(('ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/='):split('')) do
			decoder[char:byte()] = b64code-1
		end
		local n = StringLength
		local t,k = table.create(math.floor(n/4)+1),1
		local padding = str:sub(-2) == '==' and 2 or str:sub(-1) == '=' and 1 or 0
		for i = 1, padding > 0 and n-4 or n, 4 do
			local a, b, c, d = str:byte(i,i+3)
			local v = decoder[a]*0x40000 + decoder[b]*0x1000 + decoder[c]*0x40 + decoder[d]
			t[k] = string.char(bit32.extract(v,16,8),bit32.extract(v,8,8),bit32.extract(v,0,8))
			k = k + 1
		end
		if padding == 1 then
			local a, b, c = str:byte(n-3,n-1)
			local v = decoder[a]*0x40000 + decoder[b]*0x1000 + decoder[c]*0x40
			t[k] = string.char(bit32.extract(v,16,8),bit32.extract(v,8,8))
		elseif padding == 2 then
			local a, b = str:byte(n-3,n-2)
			local v = decoder[a]*0x40000 + decoder[b]*0x1000
			t[k] = string.char(bit32.extract(v,16,8))
		end
		str = table.concat(t)
	end
	
	local Position = 1
	local function Parse(fmt)
		local Values = {string.unpack(fmt,str,Position)}
		Position = table.remove(Values)
		return table.unpack(Values)
	end
	
	local Settings = Parse('B')
	local Flags = Parse('B')
	Flags = {
		--[[ValueIndexByteLength]] bit32.extract(Flags,6,2)+1,
		--[[InstanceIndexByteLength]] bit32.extract(Flags,4,2)+1,
		--[[ConnectionsIndexByteLength]] bit32.extract(Flags,2,2)+1,
		--[[MaxPropertiesLengthByteLength]] bit32.extract(Flags,0,2)+1,
		--[[Use Double instead of Float]] bit32.band(Settings,0b1) > 0
	}
	
	local ValueFMT = ('I'..Flags[1])
	local InstanceFMT = ('I'..Flags[2])
	local ConnectionFMT = ('I'..Flags[3])
	local PropertyLengthFMT = ('I'..Flags[4])
	
	local ValuesLength = Parse(ValueFMT)
	local Values = table.create(ValuesLength)
	local CFrameIndexes = {}
	
	local ValueDecoders = {
		--!!Start
		[1] = function(Modifier)
			return Parse('s'..Modifier)
		end,
		--!!Split
		[2] = function(Modifier)
			return Modifier ~= 0
		end,
		--!!Split
		[3] = function()
			return Parse('d')
		end,
		--!!Split
		[4] = function(_,Index)
			table.insert(CFrameIndexes,{Index,Parse(('I'..Flags[1]):rep(3))})
		end,
		--!!Split
		[5] = {CFrame.new,Flags[5] and 'dddddddddddd' or 'ffffffffffff'},
		--!!Split
		[6] = {Color3.fromRGB,'BBB'},
		--!!Split
		[7] = {BrickColor.new,'I2'},
		--!!Split
		[8] = function(Modifier)
			local len = Parse('I'..Modifier)
			local kpts = table.create(len)
			for i = 1,len do
				kpts[i] = ColorSequenceKeypoint.new(Parse('f'),Color3.fromRGB(Parse('BBB')))
			end
			return ColorSequence.new(kpts)
		end,
		--!!Split
		[9] = function(Modifier)
			local len = Parse('I'..Modifier)
			local kpts = table.create(len)
			for i = 1,len do
				kpts[i] = NumberSequenceKeypoint.new(Parse(Flags[5] and 'ddd' or 'fff'))
			end
			return NumberSequence.new(kpts)
		end,
		--!!Split
		[10] = {Vector3.new,Flags[5] and 'ddd' or 'fff'},
		--!!Split
		[11] = {Vector2.new,Flags[5] and 'dd' or 'ff'},
		--!!Split
		[12] = {UDim2.new,Flags[5] and 'di2di2' or 'fi2fi2'},
		--!!Split
		[13] = {Rect.new,Flags[5] and 'dddd' or 'ffff'},
		--!!Split
		[14] = function()
			local flags = Parse('B')
			local ids = {"Top","Bottom","Left","Right","Front","Back"}
			local t = {}
			for i = 0,5 do
				if bit32.extract(flags,i,1)==1 then
					table.insert(t,Enum.NormalId[ids[i+1]])
				end
			end
			return Axes.new(unpack(t))
		end,
		--!!Split
		[15] = function()
			local flags = Parse('B')
			local ids = {"Top","Bottom","Left","Right","Front","Back"}
			local t = {}
			for i = 0,5 do
				if bit32.extract(flags,i,1)==1 then
					table.insert(t,Enum.NormalId[ids[i+1]])
				end
			end
			return Faces.new(unpack(t))
		end,
		--!!Split
		[16] = {PhysicalProperties.new,Flags[5] and 'ddddd' or 'fffff'},
		--!!Split
		[17] = {NumberRange.new,Flags[5] and 'dd' or 'ff'},
		--!!Split
		[18] = {UDim.new,Flags[5] and 'di2' or 'fi2'},
		--!!Split
		[19] = function()
			return Ray.new(Vector3.new(Parse(Flags[5] and 'ddd' or 'fff')),Vector3.new(Parse(Flags[5] and 'ddd' or 'fff')))
		end
		--!!End
	}
	
	for i = 1,ValuesLength do
		local TypeAndModifier = Parse('B')
		local Type = bit32.band(TypeAndModifier,0b11111)
		local Modifier = (TypeAndModifier - Type) / 0b100000
		local Decoder = ValueDecoders[Type]
		if type(Decoder)=='function' then
			Values[i] = Decoder(Modifier,i)
		else
			Values[i] = Decoder[1](Parse(Decoder[2]))
		end
	end
	
	for i,t in pairs(CFrameIndexes) do
		Values[t[1]] = CFrame.fromMatrix(Values[t[2]],Values[t[3]],Values[t[4]])
	end
	
	local InstancesLength = Parse(InstanceFMT)
	local Instances = {}
	local NoParent = {}
	
	for i = 1,InstancesLength do
		local ClassName = Values[Parse(ValueFMT)]
		local obj
		local MeshPartMesh,MeshPartScale
		if ClassName == "UnionOperation" then
			obj = DecodeUnion(Values,Flags,Parse)
			obj.UsePartColor = true
		elseif ClassName:find("Script") then
			obj = Instance.new("Folder")
			Script(obj,ClassName=='ModuleScript')
		elseif ClassName == "MeshPart" then
			obj = Instance.new("Part")
			MeshPartMesh = Instance.new("SpecialMesh")
			MeshPartMesh.MeshType = Enum.MeshType.FileMesh
			MeshPartMesh.Parent = obj
		else
			obj = Instance.new(ClassName)
		end
		local Parent = Instances[Parse(InstanceFMT)]
		local PropertiesLength = Parse(PropertyLengthFMT)
		local AttributesLength = Parse(PropertyLengthFMT)
		Instances[i] = obj
		for i = 1,PropertiesLength do
			local Prop,Value = Values[Parse(ValueFMT)],Values[Parse(ValueFMT)]
			
			-- ok this looks awful
			if MeshPartMesh then
				if Prop == "MeshId" then
					MeshPartMesh.MeshId = Value
					continue
				elseif Prop == "TextureID" then
					MeshPartMesh.TextureId = Value
					continue
				elseif Prop == "Size" then
					if not MeshPartScale then
						MeshPartScale = Value
					else
						MeshPartMesh.Scale = Value / MeshPartScale
					end
				elseif Prop == "MeshSize" then
					if not MeshPartScale then
						MeshPartScale = Value
						MeshPartMesh.Scale = obj.Size / Value
					else
						MeshPartMesh.Scale = MeshPartScale / Value
					end
					continue
				end
			end
			
			obj[Prop] = Value
		end
		if MeshPartMesh then
			if MeshPartMesh.MeshId=='' then
				if MeshPartMesh.TextureId=='' then
					MeshPartMesh.TextureId = 'rbxasset://textures/meshPartFallback.png'
				end
				MeshPartMesh.Scale = obj.Size
			end
		end
		for i = 1,AttributesLength do
			obj:SetAttribute(Values[Parse(ValueFMT)],Values[Parse(ValueFMT)])
		end
		if not Parent then
			table.insert(NoParent,obj)
		else
			obj.Parent = Parent
		end
	end
	
	local ConnectionsLength = Parse(ConnectionFMT)
	for i = 1,ConnectionsLength do
		local a,b,c = Parse(InstanceFMT),Parse(ValueFMT),Parse(InstanceFMT)
		Instances[a][Values[b]] = Instances[c]
	end
	
	return NoParent
end


local Objects = Decode('AEB+ASEITWVzaFBhcnQhBE5hbWUhBUJsYWRlIQpCcmlja0NvbG9yB1MBIQZDRnJhbWUEEgAuAS8BIQpDYW5Db2xsaWRlAiEKQ2FzdFNoYWRvdyEFQ29sb3IGZB4QIQhNYXRlcmlhbAMAAAAAAACRQCELT3JpZW50YXRpb24KuJ6zwgAANMMAAAAAIQhQb3NpdGlvbgok'
..'xo9BvM3/P5R3lT8hCFJvdGF0aW9uCgAAtMIAAAAAAAA0QyEEU2l6ZQoh4zc9F2NnQHvkuT4hBk1lc2hJZCEXcmJ4YXNzZXRpZDovLzg4MTEyMzEwNDEhCE1lc2hTaXplCi8zHD+2yjFCSBa8QCEKTWFudWFsV2VsZCEEV2VsZCECQzAEUwAwATEBIQJDMQQyATMBNAEh'
..'BVBhcnQwIQVQYXJ0MSEOVW5pb25PcGVyYXRpb24hCEFuY2hvcmVkIgcaAAQrADUBNgEGGyo1AwAAAAAAAHJACgAAtEIAALTCAAAAAAqOwo9BwBMAQEIEOz8KAAC0QgAAAAAAALRCCsBJvD6PwnU9334oPiEEUGFydAoi1u09g8J1PXqVHj0KjsKPQbpL/j+lBDs/IQlX'
..'ZWRnZVBhcnQKg8J1PXqVHj1zMkY9Co7Cj0G6S/4/cxNQPwoAAAAAAAA0QwAANEMKNuDtPYPCdT3Cjh49Co7Cj0EhoAFAQSJlPwoAAAAAAAAAAAAAtEIKjsKPQbpL/j/09SU/CgAAAAAAAAAAAAA0wwrCjp49g8J1PXqVHj0KjsKPQYAaBEAGRVY/CoPCdT3Cjh492DpG'
..'PQqOwo9BaLj4P0EiZT8KAAC0wgAANEMAAAAACo7Cj0GAGgRAXypGPwqOwo9BIKABQF/mED8KAAAAAAAANEMAALTCCo7Cj0GAGgRAYMQfPwqOwo9BgBoEQEHeLz8KjsKPQWe4+D9f5hA/CgAAtMIAAAAAAAAAAARTADcBOAEEOQE6ATsBBEkAPAE9AQqOwo9Bom//P9HZ'
..'vz8KAAA0wwAAAAAAALRCCh8lIj6PwnU9obCXPgrQIyI+i8J1PUzNIT0KjsKPQb9v/z/K2b8/CovCdT3QIyI9n0BKPQqOwo9BpYQDQNamzz8KTM2hPYvCdT3QIyI9Co7Cj0GlhANAVW/HPwqOwo9B7NX3P74MsD8KAAAAAAAAAAAAAAAACo7Cj0Hs1fc/2UO4PwoAALTC'
..'AAC0QgAAAAAEUwA+AT8BBEABQQE0AQRZADwBPQEKjsKPQatv/z8VrhRACh8lIj6PwnU9cLCXPgqOwo9ByG//PxGuFEAKi8J1PdAjIj2eQEo9Co7Cj0GphANAmJQcQAqOwo9BqYQDQNd4GEAKjsKPQfXV9z+LxwxACo7Cj0H11fc/GeMQQARCATMBNAEEYwA1ATYBCo7C'
..'j0F1YgBAOIgmvgof4G0+j8J1PUB3ED4KX+6HPYHCdT0X9Ac9Co7Cj0FM1gNAR4BZvgoh7ss9gcJ1PV/uBz0KjsKPQba2AUArPIa+CoHCdT1f7gc9HPEpPQqOwo9BJmb6Pys8hr4KgcJ1PRf0Bz326Sk9Co7Cj0FN1gNAI0UivgqOwo9BQd75PyYY570KjsKPQW4d/j8I'
..'KIG9Co7Cj0FB3vk/N8cqvgqOwo9BWpIDQAgogb0KAAC0QgAAAAAAAAAABEMBRAE0ASEFTW9kZWwhBUR1bW15IQtQcmltYXJ5UGFydCEKV29ybGRQaXZvdAR8AEUBRgEhEEh1bWFub2lkUm9vdFBhcnQhDUJvdHRvbVN1cmZhY2UDAAAAAAAAAAAKAAAAAAAANEMAAAAA'
..'Cv//m0EAAEBAgOuRvwoAADTDAAAAAAAANMMKAAAAQAAAAEAAAIA/IQpUb3BTdXJmYWNlIQxUcmFuc3BhcmVuY3kDAAAAAAAA8D8hB01vdG9yNkQhCFJvb3QgSGlwBFMARQFHASELTWF4VmVsb2NpdHkDAAAAoJmZuT8hBVRvcnNvIQhMZWZ0IEhpcARIAUkBSgEESwFJ'
..'AUoBIQlSaWdodCBIaXAETAFNAUoBBE4BTwFKASENTGVmdCBTaG91bGRlcgRQAUkBSgEEUQFJAUoBIQ5SaWdodCBTaG91bGRlcgRSAU0BSgEEUwFPAUoBIQROZWNrBEYBRQFHAQRUAUUBRwEhCExlZnQgTGVnBJkARQFVAQr//59BAQCAP4Drkb8KAACAPwAAAEAAAIA/'
..'IQlSaWdodCBMZWcEnQBFAVUBCv//l0EBAIA/gOuRvyEITGVmdCBBcm0EoABFAVUBCv//p0EAAEBAgOuRvyEJUmlnaHQgQXJtBKMARQFVAQr//49BAABAQIDrkb8hBEhlYWQEpgBFAUYBCv//m0EAAJBAgOuRvwoAAABAAACAPwAAgD8hBURlY2FsIQRGYWNlIQdUZXh0'
..'dXJlIRxyYnhhc3NldDovL3RleHR1cmVzL2ZhY2UucG5nIQhIdW1hbm9pZARWAVcBWAEHYAEEsgBZAVoBBseseAoAAIdCAAAAAAAANMMK2U6TQT6yrj9AXQrACo6fzT2qcH1AYGvGPiEMVXNlUGFydENvbG9yCszMzD0AAIA/y8xMPgpCT5NBp4M1P6Ref8AKcE6TQcQo'
..'CT/NxnrACgAAh8IAADRDAAA0QwoAAIBAAACAPwAAAEAKh5aWQYACWL0TnJnACgAAtMEAAAAAAAC0wgp18LE+9ougPEfhWkAKxKCTQQDsuz+ZzPS/CrCW4TwG+ss9R+FaQArZTpNBvqKmP3H7678K2U6TQT410T/Anf2/Cu78kkEA7Ls/mcz0vwRTAFsBXAEEXQFeAV8B'
..'BMYAYAFhAQoAAIfCAAA0wwAANMMKQ0uTQR0dwz+Ob+O/CgAA4cIAAAAAAAAAACEGSGFuZGxlBMwAYgFjAQY2NjYKAACHwgAANEMAADTDCkNLk0FyJxtAQKzKPgo8Ago+gMKMP5p9OD4hF3JieGFzc2V0aWQ6Ly84ODExMjM0ODU3CmmLJ0CMBaVBaYsnQARTAGQBZQEE'
..'ZgFeAV8BIQdOTyBOQU1FB5QABNYAYgFjAQZbW1sKQ0uTQRCHC0DoQ0a+Ci68ND68o5Y+CS5oPyEXcmJ4YXNzZXRpZDovLzg4MTEyMjY5MjAKnYVhQG5dtUC2apNBBGcBXgFfAQTcAGIBYwEKQ0uTQcrtKUC0A3Q/CluhMD4D/Eo+mV3LPiEXcmJ4YXNzZXRpZDovLzg4'
..'MTEyNDAyMDUKVtI4QFBVR0DJ59RABGgBXgFfAQTjAGkBagEKAACHQgAAAAAAALTCCtlOk0FJ2tg/5t6vvwoh1u09VcJ1PVyVHj0K2U6TQagi1z8CKa+/ClXCdT1clR49cjJGPQrZTpNBKxvTPzzjuL8KAAC0wQAAAAAAADTDCgng7T1VwnU9wo4ePQrZTpNBpqfTP+eC'
..'xL8KAAC0QQAANEMAALRCCtlOk0EfKts/1W6lvwoAALRBAAA0QwAANEMKwo6ePVXCdT1clR49CtlOk0HqE9s/pYq/vwpVwnU9wo4ePbM6Rj0K2U6TQQTtyT9Ae8C/CtlOk0HAKN4/Ohq4vwrZTpNBt8XjP7CZnb8K2U6TQaOB5T9cXaa/CtlOk0HzbOI/bM2tvwrZTpNB'
..'FQvaPwmSmb8KAACHwgAANEMAAAAABFMAawFsAQRtAW4BbwEE+wBpAWoBCtlOk0HYlQJAcvcMvwpe7oc9U8J1Pf3zBz0K2U6TQXz+BkCpega/Cvrtyz1TwnU9Xu4HPQrZTpNBW0AGQLrp7r4KU8J1PV7uBz388Ck9CtlOk0GxFAJAzBfhvgpTwnU9/fMHPfbpKT0K2U6T'
..'QU+sBUBgPBO/CtlOk0EoW/w/9XUTvwoAAIfCAAA0QwAAtEIK2U6TQWrX/T/AeyK/CtlOk0GC//4/PrQGvwoAALRBAAA0QwAAAAAK2U6TQV8XA0C4ZCm/BHABbgFvAQQMAXEBcgEK2U6TQQyOsj/iOQXACrAjIj5dwnU9TM0hPQrZTpNBKo6yP+Q5BcAKXcJ1PbAjIj2f'
..'QEo9CtlOk0Ghh7M/ufoNwAoAALTBAAAAAAAANEMKTM2hPV3CdT2wIyI9CtlOk0GbrLY/CC8KwArZTpNBb5SxPwPy+L8KAAC0QQAANMMAAAAACtlOk0Gbb64/hEQAwARTAHMBdAEEdQFuAW8BBBoBcQFyAQrZTpNBmC2KPxf3NcAKsCMiPl3CdT1LzSE9CtlOk0G2LYo/'
..'Gfc1wArZTpNBLieLP+63PsAKS82hPV3CdT2wIyI9CtlOk0EnTI4/Pew6wArZTpNB+zOJPzc2LcAK2U6TQScPhj+5ATHABHYBbgFvAQQlAXcBeAEKUrizwgAANMMAAAAACiTGj0G7zf8/7IyXvwQoAXkBegEK16OzwgAANMMAAAAACiTGj0G7zf8/2MMLvwRTAHsBfAEE'
..'fQF7AXwBBCwBeQF6AQokxo9Bu83/P2zE5L8EfgF7AXwBCqD/f7+QqWooCL07swp+vTuzEAAAMwAAgD8KAACAvwi9O7MpvTsnCgi9OzMAAIC/AACAMwoAAAAAQIIWQAAAAAAK0P9/vxS9O7PIhYinCtm8OzMAAIC/yP9/MwqYvTuz//9/MwAAgD8KAACAvyiGCKaYvTuz'
..'Cjq9O7MAAIC/2c2MpwoAAIC/Or07MwAAwLMKAIDlOgoP9T8AiDM7CtD/f78UvTuzA707JwrZvDszAACAv8r/fzMKMAAAJwAAgL8AAACzCgAAgL/uhQimab07swoAAAAAAACAvwu9OzMKAAAAAAu9OzMAAIA/CgCA5TpRsytAACg8uwrQ/3+/FL07s3BciKUKAIDlOot0'
..'YEAAIjy7CgCA5TrIu4I/ADH3OwrQ/3+/FL07s4BciKUKAACAvwAAAAAAAAAACgAAAAAAAIA/AAAAAAoAAAAAAAAAAAAAgD8KAACAvwAAgL8AAAAACi69O7MAAAAAAACAPwoAAAAA//9/PwAAAAAKAAAAvwAAgD8AAAAACgAAgD8AAIC/AAAAAAouvTuzAAAAgAAAgL8K'
..'AAAAPwAAgD8AAAAACi69O7MAAAAAAACAvwoAAIC/AAAAPwAAAAAKAAAAPwAAAD8AAAAACgAAgD8AAAA/AAAAAAoAAAC/AAAAPwAAAAAKAAAAAAAAAL8AAAAACgAAAAD+/38/AAAAAApDS5NB8DXTPwCTvL8K4P9/PxbvQ6heg+yoCgAAACkW78O+XoNsvwrQ/3+/SO9D'
..'p5yD7KcK7v/PKRbvw75eg2y/CtD/f7/u/88pAACQkgpI70OnFu/DvjGDbL8KAIDlOnxq1T4AAAA2CtD/fz/4/z8pAACAEQpK85KoFu/DvjGDbD8K0P9/Px5tXKn8CQWqChwAQKkV78O+XoNsvwrQ/38/5pvDqfQebKoKKpMfqhTvw75eg2y/CsD/fz9STH4pRjAiEgqh'
..'ocKoFu/DviKDbD8KAAAAAECCFsAAAAAACgAAAACAWdu/AAAAAAoAAAAAAB49wAAAgLQK3/8bKhTvw75eg2y/CtD/fz/1r7co9bpdKQry/28p0P9/Pz3vjh0KFe/DvutsXKgxg2y/CgCA5ToS1t++AMAzOwrQ/38/HABAqR4AAJwKHm1cqRXvw74xg2w/CgCA5Tq5SKq/'
..'AC73Owr7/4+dMYNsv/Puwz4K0P9/P68OSqme5/OpCgAAAJHQ/38/8v9vqQoxg2y/7WxcqBbvwz4KAIDlOoCIqT4AIDy7CgCA5TqW5JM/ACA8uwrQ/3+/LO/uJze9O7MKcr07swgAADMAAIA/CrD/f78P7+4nGL07swp6vTuzDAAAMwAAgD8K8P9/vwy9O7McvTsnCvi8'
..'OzMAAIC/7v9/MwoAAAAAAFYjPwAAAAAKAAAAAABvGr8AAAAAMQEAAA0AAgADAAQABQAGAAcACAAJAAoACQALAAwADQAOAA8AEAARABIAEwAUABUAFgAXABgAGQAaABsAAQMAAgAcAB0AHgAfACAAIwBACwAuAC8AMAAqAAAxADIAMwA0AAAuADUANgA3AAAxADIAOAA5'
..'AAAuADoAOwAqAAAxADwAPQA+AAAxADIAPwA5AAAuADUAQABBAAAuADoAQgAqAAAxADIAQwA0AAAxADwARABFAAAKACQAJQAEACYABgAnAAgACQALACgADQApAA8AKgARACsAEwAsABUALQAbAAMDAAIAHAAdAEYAHwBHACMAQAUALgBMAE0AQQAAMQBOAE8ANAAALgBQ'
..'AFEAKgAAMQBOAFIAUwAALgBQAFQAVQAACgAkACUABAAmAAYASAAIAAkACwAoAA0AKQAPAEEAEQBJABMASgAVAEsAGwAFAwACABwAHQBWAB8AVwAjAEAFAC4ATABbAEEAADEAXABdADQAAC4AUABeACoAADEAXABfAFMAAC4AUABgAFUAAAoAJAAlAAQAJgAGAFgACAAJ'
..'AAsAKAANACkADwBBABEAWQATAEoAFQBaABsABwMAAgAcAB0AVgAfAGEAIwBACAAuAGUAZgAqAAAuAGcAaABBAAAxAGkAagBFAAAxAGsAbAA0AAAuAGUAbQBVAAAuAGcAbgA3AAAxAGsAbwBTAAAxAGkAcABxAAAKACQAJQAEACYABgBiAAgACQALACgADQApAA8AKgAR'
..'AGMAEwAsABUAZAAbAAkDAAIAHAAdAEYAHwByAHMAAAIAAgB0AHYAdwAuAAsKAAIAeAAkACUAeQB6AAYAdwAPAHsAEQB8ABMAfQAVAH4AfwB6AIAAgQCCAAwEAAIAgwAdAIQAHwCEAIUAhgAuAAsKAAIAhwAkACUAeQB6AAYAdwAIAAkADwB7ABEAfAATAH0AFQB+AH8A'
..'egCCAA4EAAIAiAAdAIkAHwCKAIUAhgCCAA4EAAIAiwAdAIwAHwCNAIUAhgCCAA4EAAIAjgAdAI8AHwCQAIUAhgCCAA4EAAIAkQAdAJIAHwCTAIUAhgCCAA4EAAIAlAAdAJUAHwCWAIUAhgAuAAsKAAIAlwAkACUAeQB6AAYAmAAIAAkADwB7ABEAmQATAH0AFQCaAH8A'
..'egAuAAsKAAIAmwAkACUAeQB6AAYAnAAIAAkADwB7ABEAnQATAH0AFQCaAH8AegAuAAsKAAIAngAkACUAeQB6AAYAnwAIAAkADwB7ABEAoAATAH0AFQCaAH8AegAuAAsKAAIAoQAkACUAeQB6AAYAogAIAAkADwB7ABEAowATAH0AFQCaAH8AegAuAAsJAAIApAAkACUA'
..'eQB6AAYApQAPAHsAEQCmABMAfQAVAKcAfwB6AKgAGAIAAgCpAKoAqwCsAAsAAHMAAAEAdgCtACMAQAVAAwAxALUAtgCxAAAxALUAtwC4AIAuALkAugC7AAAuALwAvQC7AAAuAL4AvwC7AAAuAL4AwAC7AAAuALwAwQC7ABsKACQAJQAEAK4ABgCvAAgACQALALAADwCx'
..'ABEAsgATALEAFQCzALQAJQAbABwDAAIAHAAdAMIAHwDDAAEAGw4AAgADACQAJQAEAAUABgDEAAgACQAKAAkACwAMAA0ADgAPAMUAEQDGABMAxwAVABYAFwAYABkAGgABABsNAAIAyAAkACUABAAmAAYAyQAIAAkACwDKAA0ADgAPAMsAEQDMABMAxwAVAM0AFwDOABkA'
..'zwAbAB8DAAIAHAAdANAAHwDRAAEAGw0AAgDSACQAJQAEANMABgDUAAgACQALANUADQAOAA8AywARANYAEwDHABUA1wAXANgAGQDZABsAIQMAAgAcAB0A0AAfANoAAQAbDQACANIAJAAlAAQA0wAGANsACAAJAAsA1QANAA4ADwDLABEA3AATAMcAFQDdABcA3gAZAN8A'
..'GwAjAwACABwAHQDQAB8A4AAjAEALAC4A5ADlAOIAADEA5gDnAOgAAC4A6QDqAOsAADEA5gDsAO0AAC4A7gDvAOIAADEA8ADxALgAADEA5gDyAO0AAC4A6QDzALsAAC4A7gD0AOIAADEA5gD1AOgAADEA8AD2APcAGwoAJAAlAAQAJgAGAOEACAAJAAsAKAANACkADwDi'
..'ABEA4wATAOIAFQAtABsAJQMAAgAcAB0A+AAfAPkAIwBACAAuAPwA/QDiAAAuAP4A/wC7AAAxAAABAQH3AAAxAAIBAwHoAAAuAPwABAEFAQAuAP4ABgHrAAAxAAIBBwEIAQAxAAABCQGxABsKACQAJQAEACYABgD6AAgACQALACgADQApAA8A4gARAPsAEwDiABUAZAAb'
..'ACcDAAIAHAAdAPgAHwAKASMAQAUALgANAQ4BuwAAMQAPARABEQEALgASARMB4gAAMQAPARQBFQEALgASARYBBQEbCgAkACUABAAmAAYACwEIAAkACwAoAA0AKQAPALsAEQAMARMAuwAVAEsAGwApAwACABwAHQAXAR8AGAEjAEAFAC4AGwEcAbsAADEADwEdAREBAC4A'
..'HgEfAeIAADEADwEgARUBAC4AHgEhAQUBGwoAJAAlAAQAJgAGABkBCAAJAAsAKAANACkADwC7ABEAGgETALsAFQBaABsAKwMAAgAcAB0AFwEfACIBAQAADAACAMgABAAmAAYAIwEIAAkACwDKAA0ADgAPACQBEQAlARMAFAAVAM0AFwDOABkAzwABAAAMAAIA0gAEANMA'
..'BgAmAQgACQALANUADQAOAA8AJwERACgBEwAUABUA1wAXANgAGQDZABsALgMAAgAcAB0AKQEfACoBAQAADAACANIABADTAAYAKwEIAAkACwDVAA0ADgAPACcBEQAsARMAFAAVAN0AFwDeABkA3wAbADADAAIAHAAdACkBHwAtASsCIQABAiIALQQhAAMEIgAtBiEABQYi'
..'AC0IIQAHCCIALQohAAkKIgAtC3UADA0hAAwNIgAODyEADg8iABQQIQAOECIAFREhAA4RIgAWEiEADhIiABcTIQAOEyIAGB0hABwdIgAeICEAHyAiAB4iIQAhIiIAHiQhACMkIgAeJiEAJSYiAB4oIQAnKCIAHiohACkqIgAeLCEAKywiAB4vIQAuLyIALTEhADAxIgAt')
for _,obj in pairs(Objects) do
	obj.Parent = script or workspace
end
