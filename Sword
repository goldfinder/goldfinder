-- Converted using Mokiros's Model to Script Version 3
-- Converted string size: 9024 characters

local ScriptFunctions = {
function(script,require)
script.Parent.Material = Enum.Material.Metal
end,
function(script,require)
script.Parent.Material = Enum.Material.Metal
end
}
local ScriptIndex = 0
local Scripts,ModuleScripts,ModuleCache = {},{},{}
local _require = require
function require(obj,...)
	local index = ModuleScripts[obj]
	if not index then
		local a,b = pcall(_require,obj,...)
		return not a and error(b,2) or b
	end
	
	local res = ModuleCache[index]
	if res then return res end
	res = ScriptFunctions[index](obj,require)
	if res==nil then error("Module code did not return exactly one value",2) end
	ModuleCache[index] = res
	return res
end
local function Script(obj,ismodule)
	ScriptIndex = ScriptIndex + 1
	local t = ismodule and ModuleScripts or Scripts
	t[obj] = ScriptIndex
end

function RunScripts()
	for script, index in pairs(Scripts) do
		coroutine.wrap(function()
			ScriptFunctions[index](script, require)
		end)()
	end
end


local function DecodeUnion(Values,Flags,Parse,data)
	local m = Instance.new("Folder")
	m.Name = "UnionCache ["..tostring(math.random(1,9999)).."]"
	m.Archivable = false
	m.Parent = game:GetService("ServerStorage")
	local Union,Subtract = {},{}
	if not data then
		data = Parse('B')
	end
	local ByteLength = (data % 4) + 1
	local Length = Parse('I'..ByteLength)
	local ValueFMT = ('I'..Flags[1])
	for i = 1,Length do
		local data = Parse('B')
		local part
		local isNegate = bit32.band(data,0b10000000) > 0
		local isUnion =  bit32.band(data,0b01000000) > 0
		if isUnion then
			part = DecodeUnion(Values,Flags,Parse,data)
		else
			local isMesh = data % 2 == 1
			local ClassName = Values[Parse(ValueFMT)]
			part = Instance.new(ClassName)
			part.Size = Values[Parse(ValueFMT)]
			part.Position = Values[Parse(ValueFMT)]
			part.Orientation = Values[Parse(ValueFMT)]
			if isMesh then
				local mesh = Instance.new("SpecialMesh")
				mesh.MeshType = Values[Parse(ValueFMT)]
				mesh.Scale = Values[Parse(ValueFMT)]
				mesh.Offset = Values[Parse(ValueFMT)]
				mesh.Parent = part
			end
		end
		part.Parent = m
		table.insert(isNegate and Subtract or Union,part)
	end
	local first = table.remove(Union,1)
	if #Union>0 then
		first = first:UnionAsync(Union)
	end
	if #Subtract>0 then
		first = first:SubtractAsync(Subtract)
	end
	m:Destroy()
	return first
end

local function Decode(str)
	local StringLength = #str
	
	-- Base64 decoding
	do
		local decoder = {}
		for b64code, char in pairs(('ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/='):split('')) do
			decoder[char:byte()] = b64code-1
		end
		local n = StringLength
		local t,k = table.create(math.floor(n/4)+1),1
		local padding = str:sub(-2) == '==' and 2 or str:sub(-1) == '=' and 1 or 0
		for i = 1, padding > 0 and n-4 or n, 4 do
			local a, b, c, d = str:byte(i,i+3)
			local v = decoder[a]*0x40000 + decoder[b]*0x1000 + decoder[c]*0x40 + decoder[d]
			t[k] = string.char(bit32.extract(v,16,8),bit32.extract(v,8,8),bit32.extract(v,0,8))
			k = k + 1
		end
		if padding == 1 then
			local a, b, c = str:byte(n-3,n-1)
			local v = decoder[a]*0x40000 + decoder[b]*0x1000 + decoder[c]*0x40
			t[k] = string.char(bit32.extract(v,16,8),bit32.extract(v,8,8))
		elseif padding == 2 then
			local a, b = str:byte(n-3,n-2)
			local v = decoder[a]*0x40000 + decoder[b]*0x1000
			t[k] = string.char(bit32.extract(v,16,8))
		end
		str = table.concat(t)
	end
	
	local Position = 1
	local function Parse(fmt)
		local Values = {string.unpack(fmt,str,Position)}
		Position = table.remove(Values)
		return table.unpack(Values)
	end
	
	local Settings = Parse('B')
	local Flags = Parse('B')
	Flags = {
		--[[ValueIndexByteLength]] bit32.extract(Flags,6,2)+1,
		--[[InstanceIndexByteLength]] bit32.extract(Flags,4,2)+1,
		--[[ConnectionsIndexByteLength]] bit32.extract(Flags,2,2)+1,
		--[[MaxPropertiesLengthByteLength]] bit32.extract(Flags,0,2)+1,
		--[[Use Double instead of Float]] bit32.band(Settings,0b1) > 0
	}
	
	local ValueFMT = ('I'..Flags[1])
	local InstanceFMT = ('I'..Flags[2])
	local ConnectionFMT = ('I'..Flags[3])
	local PropertyLengthFMT = ('I'..Flags[4])
	
	local ValuesLength = Parse(ValueFMT)
	local Values = table.create(ValuesLength)
	local CFrameIndexes = {}
	
	local ValueDecoders = {
		--!!Start
		[1] = function(Modifier)
			return Parse('s'..Modifier)
		end,
		--!!Split
		[2] = function(Modifier)
			return Modifier ~= 0
		end,
		--!!Split
		[3] = function()
			return Parse('d')
		end,
		--!!Split
		[4] = function(_,Index)
			table.insert(CFrameIndexes,{Index,Parse(('I'..Flags[1]):rep(3))})
		end,
		--!!Split
		[5] = {CFrame.new,Flags[5] and 'dddddddddddd' or 'ffffffffffff'},
		--!!Split
		[6] = {Color3.fromRGB,'BBB'},
		--!!Split
		[7] = {BrickColor.new,'I2'},
		--!!Split
		[8] = function(Modifier)
			local len = Parse('I'..Modifier)
			local kpts = table.create(len)
			for i = 1,len do
				kpts[i] = ColorSequenceKeypoint.new(Parse('f'),Color3.fromRGB(Parse('BBB')))
			end
			return ColorSequence.new(kpts)
		end,
		--!!Split
		[9] = function(Modifier)
			local len = Parse('I'..Modifier)
			local kpts = table.create(len)
			for i = 1,len do
				kpts[i] = NumberSequenceKeypoint.new(Parse(Flags[5] and 'ddd' or 'fff'))
			end
			return NumberSequence.new(kpts)
		end,
		--!!Split
		[10] = {Vector3.new,Flags[5] and 'ddd' or 'fff'},
		--!!Split
		[11] = {Vector2.new,Flags[5] and 'dd' or 'ff'},
		--!!Split
		[12] = {UDim2.new,Flags[5] and 'di2di2' or 'fi2fi2'},
		--!!Split
		[13] = {Rect.new,Flags[5] and 'dddd' or 'ffff'},
		--!!Split
		[14] = function()
			local flags = Parse('B')
			local ids = {"Top","Bottom","Left","Right","Front","Back"}
			local t = {}
			for i = 0,5 do
				if bit32.extract(flags,i,1)==1 then
					table.insert(t,Enum.NormalId[ids[i+1]])
				end
			end
			return Axes.new(unpack(t))
		end,
		--!!Split
		[15] = function()
			local flags = Parse('B')
			local ids = {"Top","Bottom","Left","Right","Front","Back"}
			local t = {}
			for i = 0,5 do
				if bit32.extract(flags,i,1)==1 then
					table.insert(t,Enum.NormalId[ids[i+1]])
				end
			end
			return Faces.new(unpack(t))
		end,
		--!!Split
		[16] = {PhysicalProperties.new,Flags[5] and 'ddddd' or 'fffff'},
		--!!Split
		[17] = {NumberRange.new,Flags[5] and 'dd' or 'ff'},
		--!!Split
		[18] = {UDim.new,Flags[5] and 'di2' or 'fi2'},
		--!!Split
		[19] = function()
			return Ray.new(Vector3.new(Parse(Flags[5] and 'ddd' or 'fff')),Vector3.new(Parse(Flags[5] and 'ddd' or 'fff')))
		end
		--!!End
	}
	
	for i = 1,ValuesLength do
		local TypeAndModifier = Parse('B')
		local Type = bit32.band(TypeAndModifier,0b11111)
		local Modifier = (TypeAndModifier - Type) / 0b100000
		local Decoder = ValueDecoders[Type]
		if type(Decoder)=='function' then
			Values[i] = Decoder(Modifier,i)
		else
			Values[i] = Decoder[1](Parse(Decoder[2]))
		end
	end
	
	for i,t in pairs(CFrameIndexes) do
		Values[t[1]] = CFrame.fromMatrix(Values[t[2]],Values[t[3]],Values[t[4]])
	end
	
	local InstancesLength = Parse(InstanceFMT)
	local Instances = {}
	local NoParent = {}
	
	for i = 1,InstancesLength do
		local ClassName = Values[Parse(ValueFMT)]
		local obj
		local MeshPartMesh,MeshPartScale
		if ClassName == "UnionOperation" then
			obj = DecodeUnion(Values,Flags,Parse)
			obj.UsePartColor = true
		elseif ClassName:find("Script") then
			obj = Instance.new("Folder")
			Script(obj,ClassName=='ModuleScript')
		elseif ClassName == "MeshPart" then
			obj = Instance.new("Part")
			MeshPartMesh = Instance.new("SpecialMesh")
			MeshPartMesh.MeshType = Enum.MeshType.FileMesh
			MeshPartMesh.Parent = obj
		else
			obj = Instance.new(ClassName)
		end
		local Parent = Instances[Parse(InstanceFMT)]
		local PropertiesLength = Parse(PropertyLengthFMT)
		local AttributesLength = Parse(PropertyLengthFMT)
		Instances[i] = obj
		for i = 1,PropertiesLength do
			local Prop,Value = Values[Parse(ValueFMT)],Values[Parse(ValueFMT)]
			
			-- ok this looks awful
			if MeshPartMesh then
				if Prop == "MeshId" then
					MeshPartMesh.MeshId = Value
					continue
				elseif Prop == "TextureID" then
					MeshPartMesh.TextureId = Value
					continue
				elseif Prop == "Size" then
					if not MeshPartScale then
						MeshPartScale = Value
					else
						MeshPartMesh.Scale = Value / MeshPartScale
					end
				elseif Prop == "MeshSize" then
					if not MeshPartScale then
						MeshPartScale = Value
						MeshPartMesh.Scale = obj.Size / Value
					else
						MeshPartMesh.Scale = MeshPartScale / Value
					end
					continue
				end
			end
			
			obj[Prop] = Value
		end
		if MeshPartMesh then
			if MeshPartMesh.MeshId=='' then
				if MeshPartMesh.TextureId=='' then
					MeshPartMesh.TextureId = 'rbxasset://textures/meshPartFallback.png'
				end
				MeshPartMesh.Scale = obj.Size
			end
		end
		for i = 1,AttributesLength do
			obj:SetAttribute(Values[Parse(ValueFMT)],Values[Parse(ValueFMT)])
		end
		if not Parent then
			table.insert(NoParent,obj)
		else
			obj.Parent = Parent
		end
	end
	
	local ConnectionsLength = Parse(ConnectionFMT)
	for i = 1,ConnectionsLength do
		local a,b,c = Parse(InstanceFMT),Parse(ValueFMT),Parse(InstanceFMT)
		Instances[a][Values[b]] = Instances[c]
	end
	
	return NoParent
end


local Objects = Decode('AEB/ASEITWVzaFBhcnQhBE5hbWUhBUJsYWRlIQpCcmlja0NvbG9yB1MBIQZDRnJhbWUEEgAvATABIQpDYW5Db2xsaWRlAiEKQ2FzdFNoYWRvdyEFQ29sb3IGZB4QIQhNYXRlcmlhbAMAAAAAAACRQCELT3JpZW50YXRpb24KuJ6zwgAANMMAAAAAIQhQb3NpdGlvbgok'
..'xo9BvM3/P5R3lT8hCFJvdGF0aW9uCgAAtMIAAAAAAAA0QyEEU2l6ZQoh4zc9F2NnQHvkuT4hBk1lc2hJZCEXcmJ4YXNzZXRpZDovLzg4MTEyMzEwNDEhCE1lc2hTaXplCi8zHD+2yjFCSBa8QCEKTWFudWFsV2VsZCEEV2VsZCECQzAETAAxATIBIQJDMQQzATQBNQEh'
..'BVBhcnQwIQVQYXJ0MSEGU2NyaXB0IQdOTyBOQU1FB5QABCkANgE3AQZbW1sK16OzwgAANMMAAAAACiTGj0G7zf8/2MMLvwouvDQ+vKOWPgkuaD8hF3JieGFzc2V0aWQ6Ly84ODExMjI2OTIwCp2FYUBuXbVAtmqTQQRMADgBOQEEOgE4ATkBIQ5Vbmlvbk9wZXJhdGlv'
..'biEIQW5jaG9yZWQiBxoABDcAOwE8AQYbKjUDAAAAAAAAckAKAAC0QgAAtMIAAAAACo7Cj0F1YgBAOIgmvgoAALRCAAAAAAAAtEIKH+BtPo/CdT1AdxA+IQRQYXJ0Cl/uhz2BwnU9F/QHPQqOwo9BTNYDQEeAWb4KIe7LPYHCdT1f7gc9Co7Cj0G2tgFAKzyGvgoAAAAA'
..'AAA0QwAAtMIhCVdlZGdlUGFydAqBwnU9X+4HPRzxKT0KjsKPQSZm+j8rPIa+CgAAtMIAAAAAAAAAAAqBwnU9F/QHPfbpKT0KjsKPQU3WA0AjRSK+CgAAAAAAADRDAAA0QwqOwo9BQd75PyYY570KAAC0wgAAtEIAAAAACo7Cj0FuHf4/CCiBvQoAAAAAAAAAAAAAtEIK'
..'jsKPQUHe+T83xyq+CgAAAAAAAAAAAAAAAAqOwo9BWpIDQAgogb0KAAC0QgAAAAAAAAAABEwAPQE+AQQ/AUABNQEEUgA7ATwBCo7Cj0HAEwBAQgQ7PwrASbw+j8J1Pd9+KD4KItbtPYPCdT16lR49Co7Cj0G6S/4/pQQ7PwqDwnU9epUePXMyRj0KjsKPQbpL/j9zE1A/'
..'Cjbg7T2DwnU9wo4ePQqOwo9BIaABQEEiZT8KjsKPQbpL/j/09SU/CgAAAAAAAAAAAAA0wwrCjp49g8J1PXqVHj0KjsKPQYAaBEAGRVY/CoPCdT3Cjh492DpGPQqOwo9BaLj4P0EiZT8KAAC0wgAANEMAAAAACo7Cj0GAGgRAXypGPwqOwo9BIKABQF/mED8KjsKPQYAa'
..'BEBgxB8/Co7Cj0GAGgRAQd4vPwqOwo9BZ7j4P1/mED8EQQFCAUMBBGgARAFFAQqOwo9Bq2//PxWuFEAKAAA0wwAAAAAAALRCCh8lIj6PwnU9cLCXPgrQIyI+i8J1PUzNIT0KjsKPQchv/z8RrhRACovCdT3QIyI9nkBKPQqOwo9BqYQDQJiUHEAKTM2hPYvCdT3QIyI9'
..'Co7Cj0GphANA13gYQAqOwo9B9dX3P4vHDEAKjsKPQfXV9z8Z4xBABEwARgFHAQRIATQBNQEEdgBEAUUBCo7Cj0Gib/8/0dm/PwofJSI+j8J1PaGwlz4KjsKPQb9v/z/K2b8/CovCdT3QIyI9n0BKPQqOwo9BpYQDQNamzz8KjsKPQaWEA0BVb8c/Co7Cj0Hs1fc/vgyw'
..'PwqOwo9B7NX3P9lDuD8ESQFKATUBIQVNb2RlbCEFRHVtbXkhC1ByaW1hcnlQYXJ0IQpXb3JsZFBpdm90BIgASwFMASEQSHVtYW5vaWRSb290UGFydCENQm90dG9tU3VyZmFjZQMAAAAAAAAAAAoAAAAAAAA0QwAAAAAK//+bQQAAQECA65G/CgAANMMAAAAAAAA0wwoA'
..'AABAAAAAQAAAgD8hClRvcFN1cmZhY2UhDFRyYW5zcGFyZW5jeQMAAAAAAADwPyEHTW90b3I2RCEIUm9vdCBIaXAETABLAU0BIQtNYXhWZWxvY2l0eQMAAACgmZm5PyEFVG9yc28hCExlZnQgSGlwBE4BTwFQAQRRAU8BUAEhCVJpZ2h0IEhpcARSAVMBUAEEVAFVAVAB'
..'IQ1MZWZ0IFNob3VsZGVyBFYBTwFQAQRXAU8BUAEhDlJpZ2h0IFNob3VsZGVyBFgBUwFQAQRZAVUBUAEhBE5lY2sETAFLAU0BBFoBSwFNASEITGVmdCBMZWcEpQBLAVsBCv//n0EBAIA/gOuRvwoAAIA/AAAAQAAAgD8hCVJpZ2h0IExlZwSpAEsBWwEK//+XQQEAgD+A'
..'65G/IQhMZWZ0IEFybQSsAEsBWwEK//+nQQAAQECA65G/IQlSaWdodCBBcm0ErwBLAVsBCv//j0EAAEBAgOuRvyEESGVhZASyAEsBTAEK//+bQQAAkECA65G/CgAAAEAAAIA/AACAPyEFRGVjYWwhBEZhY2UhB1RleHR1cmUhHHJieGFzc2V0Oi8vdGV4dHVyZXMvZmFj'
..'ZS5wbmchCEh1bWFub2lkIQZIYW5kbGUEvQBcAV0BBjY2NgpSuLPCAAA0wwAAAAAKJMaPQbvN/z/sjJe/CjwCCj6Awow/mn04PiEXcmJ4YXNzZXRpZDovLzg4MTEyMzQ4NTcKaYsnQIwFpUFpiydABF4BXwFgAQdgAQTGAGEBYgEGx6x4CgAAh0IAAAAAAAA0wwrZTpNB'
..'PrKuP0BdCsAKjp/NPapwfUBga8Y+IQxVc2VQYXJ0Q29sb3IKzMzMPQAAgD/LzEw+CkJPk0GngzU/pF5/wApwTpNBxCgJP83GesAKAACHwgAANEMAADRDCgAAgEAAAIA/AAAAQAqHlpZBgAJYvROcmcAKAAC0wQAAAAAAALTCCnXwsT72i6A8R+FaQArEoJNBAOy7P5nM'
..'9L8KsJbhPAb6yz1H4VpACtlOk0G+oqY/cfvrvwrZTpNBPjXRP8Cd/b8K7vySQQDsuz+ZzPS/BEwAYwFkAQRlAWYBZwEE2gBoAWkBCgAAh8IAADTDAAA0wwpDS5NBHR3DP45v478KAADhwgAAAAAAAAAABN4AagFrAQoAAIfCAAA0QwAANMMKQ0uTQXInG0BArMo+BEwA'
..'bAFtAQRuAWYBZwEE4gBqAWsBCkNLk0EQhwtA6ENGvgRvAWYBZwEE5QBqAWsBCkNLk0HK7SlAtAN0PwpboTA+A/xKPpldyz4hF3JieGFzc2V0aWQ6Ly84ODExMjQwMjA1ClbSOEBQVUdAyefUQARwAWYBZwEE7ABxAXIBCgAAh0IAAAAAAAC0wgrZTpNBSdrYP+ber78K'
..'IdbtPVXCdT1clR49CtlOk0GoItc/AimvvwpVwnU9XJUePXIyRj0K2U6TQSsb0z8847i/CgAAtMEAAAAAAAA0wwoJ4O09VcJ1PcKOHj0K2U6TQaan0z/ngsS/CgAAtEEAADRDAAC0QgrZTpNBHyrbP9Vupb8KAAC0QQAANEMAADRDCsKOnj1VwnU9XJUePQrZTpNB6hPb'
..'P6WKv78KVcJ1PcKOHj2zOkY9CtlOk0EE7ck/QHvAvwrZTpNBwCjePzoauL8K2U6TQbfF4z+wmZ2/CtlOk0GjgeU/XF2mvwrZTpNB82ziP2zNrb8K2U6TQRUL2j8Jkpm/CgAAh8IAADRDAAAAAARMAHMBdAEEdQF2AXcBBAQBcQFyAQrZTpNB2JUCQHL3DL8KXu6HPVPC'
..'dT398wc9CtlOk0F8/gZAqXoGvwr67cs9U8J1PV7uBz0K2U6TQVtABkC66e6+ClPCdT1e7gc9/PApPQrZTpNBsRQCQMwX4b4KU8J1Pf3zBz326Sk9CtlOk0FPrAVAYDwTvwrZTpNBKFv8P/V1E78KAACHwgAANEMAALRCCtlOk0Fq1/0/wHsivwrZTpNBgv/+Pz60Br8K'
..'AAC0QQAANEMAAAAACtlOk0FfFwNAuGQpvwR4AXYBdwEEFQF5AXoBCtlOk0EMjrI/4jkFwAqwIyI+XcJ1PUzNIT0K2U6TQSqOsj/kOQXACl3CdT2wIyI9n0BKPQrZTpNBoYezP7n6DcAKAAC0wQAAAAAAADRDCkzNoT1dwnU9sCMiPQrZTpNBm6y2PwgvCsAK2U6TQW+U'
..'sT8D8vi/CgAAtEEAADTDAAAAAArZTpNBm2+uP4REAMAETAB7AXwBBH0BdgF3AQQjAXkBegEK2U6TQZgtij8X9zXACrAjIj5dwnU9S80hPQrZTpNBti2KPxn3NcAK2U6TQS4niz/utz7ACkvNoT1dwnU9sCMiPQrZTpNBJ0yOPz3sOsAK2U6TQfsziT83Ni3ACtlOk0En'
..'D4Y/uQExwAR+AXYBdwEELQE2ATcBCiTGj0G7zf8/bMTkvwR/ATgBOQEKoP9/v5CpaigIvTuzCn69O7MQAAAzAACAPwoAAIC/CL07sym9OycKCL07MwAAgL8AAIAzCgAAAABAghZAAAAAAArQ/3+/FL07s8iFiKcK2bw7MwAAgL/I/38zCrD/f78P7+4nGL07swp6vTuz'
..'DAAAMwAAgD8K8P9/vwy9O7McvTsnCvi8OzMAAIC/7v9/MwoAAAAAAFYjPwAAAAAKmL07s///fzMAAIA/CgAAgL8ohgimmL07swo6vTuzAACAv9nNjKcKAACAvzq9OzMAAMCzCgCA5TrIu4I/ADH3OwrQ/3+/FL07s4BciKUKAIDlOgoP9T8AiDM7CtD/f78UvTuzA707'
..'JwrZvDszAACAv8r/fzMKMAAAJwAAgL8AAACzCgAAgL/uhQimab07swoAAAAAAACAvwu9OzMKAAAAAAu9OzMAAIA/CgCA5TqLdGBAACI8uwoAgOU6UbMrQAAoPLsK0P9/vxS9O7NwXIilCgAAgL8AAAAAAAAAAAoAAAAAAACAPwAAAAAKAAAAAAAAAAAAAIA/CgAAgL8A'
..'AIC/AAAAAAouvTuzAAAAAAAAgD8KAAAAAP//fz8AAAAACgAAAL8AAIA/AAAAAAoAAIA/AACAvwAAAAAKLr07swAAAIAAAIC/CgAAAD8AAIA/AAAAAAouvTuzAAAAAAAAgL8KAACAvwAAAD8AAAAACgAAAD8AAAA/AAAAAAoAAIA/AAAAPwAAAAAKAAAAvwAAAD8AAAAA'
..'CgAAAAAAAAC/AAAAAAoAAAAA/v9/PwAAAAAK0P9/vyzv7ic3vTuzCnK9O7MIAAAzAACAPwpDS5NB8DXTPwCTvL8K4P9/PxbvQ6heg+yoCgAAACkW78O+XoNsvwrQ/3+/SO9Dp5yD7KcK7v/PKRbvw75eg2y/CtD/f7/u/88pAACQkgpI70OnFu/DvjGDbL8KAIDlOnxq'
..'1T4AAAA2CtD/fz/4/z8pAACAEQpK85KoFu/DvjGDbD8K0P9/Px5tXKn8CQWqChwAQKkV78O+XoNsvwrQ/38/5pvDqfQebKoKKpMfqhTvw75eg2y/CsD/fz9STH4pRjAiEgqhocKoFu/DviKDbD8KAAAAAECCFsAAAAAACgAAAACAWdu/AAAAAAoAAAAAAB49wAAAgLQK'
..'3/8bKhTvw75eg2y/CtD/fz/1r7co9bpdKQry/28p0P9/Pz3vjh0KFe/DvutsXKgxg2y/CgCA5ToS1t++AMAzOwrQ/38/HABAqR4AAJwKHm1cqRXvw74xg2w/CgCA5Tq5SKq/AC73Owr7/4+dMYNsv/Puwz4K0P9/P68OSqme5/OpCgAAAJHQ/38/8v9vqQoxg2y/7Wxc'
..'qBbvwz4KAIDlOoCIqT4AIDy7CgCA5TqW5JM/ACA8uwoAAAAAAG8avwAAAAAzAQAADQACAAMABAAFAAYABwAIAAkACgAJAAsADAANAA4ADwAQABEAEgATABQAFQAWABcAGAAZABoAGwABAwACABwAHQAeAB8AIAAjAAEAAAEAAAwAAgAkAAQAJQAGACYACAAJAAsAJwAN'
..'AA4ADwAoABEAKQATABQAFQAqABcAKwAZACwAGwAEAwACABwAHQAtAB8ALgAvAEAIADoAOwA8ADYAADoAPQA+AD8AAEAAQQBCAEMAAEAARABFAEYAADoAOwBHAEgAADoAPQBJAEoAAEAARABLAEwAAEAAQQBNAE4AAAoAMAAxAAQAMgAGADMACAAJAAsANAANADUADwA2'
..'ABEANwATADgAFQA5ABsABgMAAgAcAB0ATwAfAFAALwBACwA6AFQAVQA2AABAAFYAVwBGAAA6AFgAWQBKAABAAFYAWgBbAAA6AFwAXQA2AABAAF4AXwBgAABAAFYAYQBbAAA6AFgAYgA/AAA6AFwAYwA2AABAAFYAZABGAABAAF4AZQBDAAAKADAAMQAEADIABgBRAAgA'
..'CQALADQADQA1AA8ANgARAFIAEwA4ABUAUwAbAAgDAAIAHAAdAE8AHwBmAC8AQAUAOgBrAGwAPwAAQABtAG4ARgAAOgBvAHAANgAAQABtAHEATAAAOgBvAHIASAAACgAwADEABAAyAAYAZwAIAAkACwA0AA0ANQAPAD8AEQBoABMAaQAVAGoAGwAKAwACABwAHQBzAB8A'
..'dAAvAEAFADoAawB4AD8AAEAAeQB6AEYAADoAbwB7ADYAAEAAeQB8AEwAADoAbwB9AEgAAAoAMAAxAAQAMgAGAHUACAAJAAsANAANADUADwA/ABEAdgATAGkAFQB3ABsADAMAAgAcAB0AcwAfAH4AfwAAAgACAIAAggCDADoADgoAAgCEADAAMQCFAIYABgCDAA8AhwAR'
..'AIgAEwCJABUAigCLAIYAjACNAI4ADwQAAgCPAB0AkAAfAJAAkQCSADoADgoAAgCTADAAMQCFAIYABgCDAAgACQAPAIcAEQCIABMAiQAVAIoAiwCGAI4AEQQAAgCUAB0AlQAfAJYAkQCSAI4AEQQAAgCXAB0AmAAfAJkAkQCSAI4AEQQAAgCaAB0AmwAfAJwAkQCSAI4A'
..'EQQAAgCdAB0AngAfAJ8AkQCSAI4AEQQAAgCgAB0AoQAfAKIAkQCSADoADgoAAgCjADAAMQCFAIYABgCkAAgACQAPAIcAEQClABMAiQAVAKYAiwCGADoADgoAAgCnADAAMQCFAIYABgCoAAgACQAPAIcAEQCpABMAiQAVAKYAiwCGADoADgoAAgCqADAAMQCFAIYABgCr'
..'AAgACQAPAIcAEQCsABMAiQAVAKYAiwCGADoADgoAAgCtADAAMQCFAIYABgCuAAgACQAPAIcAEQCvABMAiQAVAKYAiwCGADoADgkAAgCwADAAMQCFAIYABgCxAA8AhwARALIAEwCJABUAswCLAIYAtAAbAgACALUAtgC3ALgADgAAAQAADAACALkABAAyAAYAugAIAAkA'
..'CwC7AA0ADgAPALwAEQC9ABMAFAAVAL4AFwC/ABkAwAB/AAABAIIAwQAvAEAFQAMAQADJAMoAxQAAQADJAMsAzACAOgDNAM4AzwAAOgDQANEAzwAAOgDSANMAzwAAOgDSANQAzwAAOgDQANUAzwAfCgAwADEABADCAAYAwwAIAAkACwDEAA8AxQARAMYAEwDFABUAxwDI'
..'ADEAGwAgAwACABwAHQDWAB8A1wABAB8OAAIAAwAwADEABAAFAAYA2AAIAAkACgAJAAsADAANAA4ADwDZABEA2gATANsAFQAWABcAGAAZABoAIwAiAAABAB8NAAIAuQAwADEABAAyAAYA3AAIAAkACwC7AA0ADgAPAN0AEQDeABMA2wAVAL4AFwC/ABkAwAAbACQDAAIA'
..'HAAdAN8AHwDgAAEAHw0AAgAkADAAMQAEACUABgDhAAgACQALACcADQAOAA8A3QARAOIAEwDbABUAKgAXACsAGQAsABsAJgMAAgAcAB0A3wAfAOMAAQAfDQACACQAMAAxAAQAJQAGAOQACAAJAAsAJwANAA4ADwDdABEA5QATANsAFQDmABcA5wAZAOgAGwAoAwACABwA'
..'HQDfAB8A6QAvAEALADoA7QDuAOsAAEAA7wDwAPEAADoA8gDzAPQAAEAA7wD1APYAADoA9wD4AOsAAEAA+QD6AMwAAEAA7wD7APYAADoA8gD8AM8AADoA9wD9AOsAAEAA7wD+APEAAEAA+QD/AAABHwoAMAAxAAQAMgAGAOoACAAJAAsANAANADUADwDrABEA7AATAOsA'
..'FQBTABsAKgMAAgAcAB0AAQEfAAIBLwBACAA6AAUBBgHrAAA6AAcBCAHPAABAAAkBCgEAAQBAAAsBDAHxAAA6AAUBDQEOAQA6AAcBDwH0AABAAAsBEAERAQBAAAkBEgHFAB8KADAAMQAEADIABgADAQgACQALADQADQA1AA8A6wARAAQBEwDrABUAOQAbACwDAAIAHAAd'
..'AAEBHwATAS8AQAUAOgAWARcBzwAAQAAYARkBGgEAOgAbARwB6wAAQAAYAR0BHgEAOgAbAR8BDgEfCgAwADEABAAyAAYAFAEIAAkACwA0AA0ANQAPAM8AEQAVARMAzwAVAHcAGwAuAwACABwAHQAgAR8AIQEvAEAFADoAJAElAc8AAEAAGAEmARoBADoAJwEoAesAAEAA'
..'GAEpAR4BADoAJwEqAQ4BHwoAMAAxAAQAMgAGACIBCAAJAAsANAANADUADwDPABEAIwETAM8AFQBqABsAMAMAAgAcAB0AIAEfACsBAQAADAACACQABAAlAAYALAEIAAkACwAnAA0ADgAPACgAEQAtARMAFAAVAOYAFwDnABkA6AAbADIDAAIAHAAdAC0AHwAuASsCIQAB'
..'AiIAHgUhAAQFIgAeByEABgciAB4JIQAICSIAHgshAAoLIgAeDSEADA0iAB4OgQAPECEADxAiABESIQAREiIAFxMhABETIgAYFCEAERQiABkVIQARFSIAGhYhABEWIgAbISEAICEiACIlIQAkJSIAIichACYnIgAiKSEAKCkiACIrIQAqKyIAIi0hACwtIgAiLyEALi8i'
..'ACIxIQAwMSIAIjMhADIzIgAe')
for _,obj in pairs(Objects) do
	obj.Parent = script or workspace
end

RunScripts()
